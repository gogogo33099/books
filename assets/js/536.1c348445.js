(window.webpackJsonp=window.webpackJsonp||[]).push([[536],{1001:function(o,t,_){"use strict";_.r(t);var v=_(14),r=Object(v.a)({},(function(){var o=this,t=o._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[t("h1",{attrs:{id:"_2-2-go-环境变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-go-环境变量"}},[o._v("#")]),o._v(" 2.2 Go 环境变量")]),o._v(" "),t("p",[o._v("Go 开发环境依赖于一些操作系统环境变量，你最好在安装 Go 之前就已经设置好他们。如果你使用的是 Windows 的话，你完全不用进行手动设置，Go 将被默认安装在目录 "),t("code",[o._v("c:/go")]),o._v(" 下。这里列举几个最为重要的环境变量：")]),o._v(" "),t("ul",[t("li",[t("strong",[o._v("$GOROOT")]),o._v(" 表示 Go 在你的电脑上的安装位置，它的值一般都是 "),t("code",[o._v("$HOME/go")]),o._v("，当然，你也可以安装在别的地方。")]),o._v(" "),t("li",[t("strong",[o._v("$GOARCH")]),o._v(" 表示目标机器的处理器架构，它的值可以是 386、amd64 或 arm。")]),o._v(" "),t("li",[t("strong",[o._v("$GOOS")]),o._v(" 表示目标机器的操作系统，它的值可以是 darwin、freebsd、linux 或 windows。")]),o._v(" "),t("li",[t("strong",[o._v("$GOBIN")]),o._v(" 表示编译器和链接器的安装位置，默认是 "),t("code",[o._v("$GOROOT/bin")]),o._v("，如果你使用的是 Go 1.0.3 及以后的版本，一般情况下你可以将它的值设置为空，Go 将会使用前面提到的默认值。")])]),o._v(" "),t("p",[o._v("目标机器是指你打算运行你的 Go 应用程序的机器。")]),o._v(" "),t("p",[o._v("Go 编译器支持交叉编译，也就是说你可以在一台机器上构建能够在不同操作系统和处理器架构上运行的应用程序，也就是说编写源代码的机器可以和目标机器有完全不同的特性（操作系统与处理器架构）。")]),o._v(" "),t("p",[o._v("为了区分本地机器和目标机器，你可以使用 "),t("code",[o._v("$GOHOSTOS")]),o._v(" 和 "),t("code",[o._v("$GOHOSTARCH")]),o._v(" 设置本地机器的操作系统名称和编译体系结构，这两个变量只有在进行交叉编译的时候才会用到，如果你不进行显示设置，他们的值会和本地机器（"),t("code",[o._v("$GOOS")]),o._v(" 和 "),t("code",[o._v("$GOARCH")]),o._v("）一样。")]),o._v(" "),t("ul",[t("li",[t("strong",[o._v("$GOPATH")]),o._v(" 默认采用和 "),t("code",[o._v("$GOROOT")]),o._v(" 一样的值，但从 Go 1.1 版本开始，你必须修改为其它路径。它可以包含多个 Go 语言源码文件、包文件和可执行文件的路径，而这些路径下又必须分别包含三个规定的目录："),t("code",[o._v("src")]),o._v("、"),t("code",[o._v("pkg")]),o._v(" 和 "),t("code",[o._v("bin")]),o._v("，这三个目录分别用于存放源码文件、包文件和可执行文件。")]),o._v(" "),t("li",[t("strong",[o._v("$GOARM")]),o._v(" 专门针对基于 arm 架构的处理器，它的值可以是 5 或 6，默认为 6。")]),o._v(" "),t("li",[t("strong",[o._v("$GOMAXPROCS")]),o._v(" 用于设置应用程序可使用的处理器个数与核数，详见 "),t("RouterLink",{attrs:{to:"/the-way-to-go/14.1.html"}},[o._v("第 14.1.3 节")]),o._v("。")],1)]),o._v(" "),t("p",[o._v("在接下来的章节中，我们将会讨论如何在 Linux、Mac OS X 和 Windows 上安装 Go 语言。在 FreeBSD 上的安装和 Linux 非常类似。开发团队正在尝试将 Go 语言移植到其它例如 OpenBSD、DragonFlyBSD、NetBSD、Plan 9、Haiku 和 Solaris 操作系统上，你可以在这个页面找到最近的动态："),t("a",{attrs:{href:"http://go-lang.cat-v.org/os-ports",target:"_blank",rel:"noopener noreferrer"}},[o._v("Go Porting Efforts"),t("OutboundLink")],1),o._v("。")]),o._v(" "),t("h2",{attrs:{id:"链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#链接"}},[o._v("#")]),o._v(" 链接")]),o._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/the-way-to-go/directory.html"}},[o._v("目录")])],1),o._v(" "),t("li",[o._v("上一节："),t("RouterLink",{attrs:{to:"/the-way-to-go/02.1.html"}},[o._v("平台与架构")])],1),o._v(" "),t("li",[o._v("下一节："),t("RouterLink",{attrs:{to:"/the-way-to-go/02.3.html"}},[o._v("在 Linux 上安装 Go")])],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);