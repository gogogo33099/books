(window.webpackJsonp=window.webpackJsonp||[]).push([[702],{1181:function(t,o,_){"use strict";_.r(o);var v=_(14),r=Object(v.a)({},(function(){var t=this,o=t._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"_19-1-简介"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_19-1-简介"}},[t._v("#")]),t._v(" 19.1 简介")]),t._v(" "),o("p",[t._v("由于 web 无处不在，本章我们将开发一个完整的程序："),o("code",[t._v("goto")]),t._v("，它是一个 web 缩短网址应用程序。示例来自 Andrew Gerrand 的讲座（见参考资料 22）。我们将把项目分成 3 个阶段，每一个都会比之前阶段包含更多的功能，并逐渐展示更多 Go 语言中的特性。我们会大量使用在 "),o("RouterLink",{attrs:{to:"/the-way-to-go/15.0.html"}},[t._v("15 章")]),t._v("所学的网页应用程序的知识。")],1),t._v(" "),o("p",[o("strong",[t._v("版本 1：")]),t._v(" 利用映射和结构体，与 "),o("code",[t._v("sync")]),t._v(" 包的 "),o("code",[t._v("Mutex")]),t._v(" 一起使用，以及一个结构体工厂。")]),t._v(" "),o("p",[o("strong",[t._v("版本 2：")]),t._v(" 数据以 "),o("code",[t._v("gob")]),t._v(" 格式写入文件以实现持久化。")]),t._v(" "),o("p",[o("strong",[t._v("版本 3：")]),t._v(" 利用协程和通道重写应用（见 "),o("RouterLink",{attrs:{to:"/the-way-to-go/14.0.html"}},[t._v("14 章")]),t._v("）。")],1),t._v(" "),o("p",[o("strong",[t._v("版本 4：")]),t._v(" 如果我们要使用 json 格式的文件该如何修改？")]),t._v(" "),o("p",[o("strong",[t._v("版本 5：")]),t._v(" 用 rpc 协议实现的分布式版本。")]),t._v(" "),o("p",[t._v("由于代码变更频繁，不会展示在此处，仅给出访问地址。")]),t._v(" "),o("h2",{attrs:{id:"链接"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#链接"}},[t._v("#")]),t._v(" 链接")]),t._v(" "),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/the-way-to-go/directory.html"}},[t._v("目录")])],1),t._v(" "),o("li",[t._v("上一节："),o("RouterLink",{attrs:{to:"/the-way-to-go/19.0.html"}},[t._v("构建一个完整的应用程序")])],1),t._v(" "),o("li",[t._v("下一节："),o("RouterLink",{attrs:{to:"/the-way-to-go/19.2.html"}},[t._v("短网址项目简介")])],1)])])}),[],!1,null,null,null);o.default=r.exports}}]);