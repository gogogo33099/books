(window.webpackJsonp=window.webpackJsonp||[]).push([[681],{1166:function(t,r,a){"use strict";a.r(r);var o=a(14),s=Object(o.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"_16-7-使用值类型时误用指针"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-7-使用值类型时误用指针"}},[t._v("#")]),t._v(" 16.7 使用值类型时误用指针")]),t._v(" "),r("p",[t._v("将一个值类型作为一个参数传递给函数或者作为一个方法的接收者，似乎是对内存的滥用，因为值类型一直是传递拷贝。但是另一方面，值类型的内存是在栈上分配，内存分配快速且开销不大。如果你传递一个指针，而不是一个值类型，Go 编译器大多数情况下会认为需要创建一个对象，并将对象移动到堆上，所以会导致额外的内存分配：因此当使用指针代替值类型作为参数传递时，我们没有任何收获。")]),t._v(" "),r("h2",{attrs:{id:"链接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#链接"}},[t._v("#")]),t._v(" 链接")]),t._v(" "),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/the-way-to-go/directory.html"}},[t._v("目录")])],1),t._v(" "),r("li",[t._v("上一节："),r("RouterLink",{attrs:{to:"/the-way-to-go/16.6.html"}},[t._v("使用指针指向接口类型")])],1),t._v(" "),r("li",[t._v("下一节："),r("RouterLink",{attrs:{to:"/the-way-to-go/16.8.html"}},[t._v("误用协程和通道")])],1)])])}),[],!1,null,null,null);r.default=s.exports}}]);