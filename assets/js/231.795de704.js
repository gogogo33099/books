(window.webpackJsonp=window.webpackJsonp||[]).push([[231],{633:function(t,s,a){"use strict";a.r(s);var n=a(14),p=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_2-10-编译和链接参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-10-编译和链接参数"}},[t._v("#")]),t._v(" 2.10 编译和链接参数")]),t._v(" "),s("p",[t._v("编译和链接参数是每一个 C/C++ 程序员需要经常面对的问题。构建每一个 C/C++ 应用均需要经过编译和链接两个步骤，CGO 也是如此。\n本节我们将简要讨论 CGO 中经常用到的编译和链接参数的用法。")]),t._v(" "),s("h2",{attrs:{id:"_2-10-1-编译参数-cflags-cppflags-cxxflags"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-10-1-编译参数-cflags-cppflags-cxxflags"}},[t._v("#")]),t._v(" 2.10.1 编译参数：CFLAGS/CPPFLAGS/CXXFLAGS")]),t._v(" "),s("p",[t._v("编译参数主要是头文件的检索路径，预定义的宏等参数。理论上来说 C 和 C++ 是完全独立的两个编程语言，它们可以有着自己独立的编译参数。\n但是因为 C++ 语言对 C 语言做了深度兼容，甚至可以将 C++ 理解为 C 语言的超集，因此 C 和 C++ 语言之间又会共享很多编译参数。\n因此 CGO 提供了 CFLAGS/CPPFLAGS/CXXFLAGS 三种参数，其中 CFLAGS 对应 C 语言编译参数 (以 "),s("code",[t._v(".c")]),t._v(" 后缀名)、\nCPPFLAGS 对应 C/C++ 代码编译参数 ("),s("em",[t._v(".c,")]),t._v(".cc,"),s("em",[t._v(".cpp,")]),t._v(".cxx)、CXXFLAGS 对应纯 C++ 编译参数 ("),s("em",[t._v(".cc,")]),t._v(".cpp,*.cxx)。")]),t._v(" "),s("h2",{attrs:{id:"_2-10-2-链接参数-ldflags"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-10-2-链接参数-ldflags"}},[t._v("#")]),t._v(" 2.10.2 链接参数：LDFLAGS")]),t._v(" "),s("p",[t._v("链接参数主要包含要链接库的检索目录和要链接库的名字。因为历史遗留问题，链接库不支持相对路径，我们必须为链接库指定绝对路径。\ncgo 中的 ${SRCDIR} 为当前目录的绝对路径。经过编译后的 C 和 C++ 目标文件格式是一样的，因此 LDFLAGS 对应 C/C++ 共同的链接参数。")]),t._v(" "),s("h2",{attrs:{id:"_2-10-3-pkg-config"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-10-3-pkg-config"}},[t._v("#")]),t._v(" 2.10.3 pkg-config")]),t._v(" "),s("p",[t._v("为不同 C/C++ 库提供编译和链接参数是一项非常繁琐的工作，因此 cgo 提供了对应 "),s("code",[t._v("pkg-config")]),t._v(" 工具的支持。\n我们可以通过 "),s("code",[t._v("#cgo pkg-config xxx")]),t._v(" 命令来生成 xxx 库需要的编译和链接参数，其底层通过调用\n"),s("code",[t._v("pkg-config xxx --cflags")]),t._v(" 生成编译参数，通过 "),s("code",[t._v("pkg-config xxx --libs")]),t._v(" 命令生成链接参数。\n需要注意的是 "),s("code",[t._v("pkg-config")]),t._v(" 工具生成的编译和链接参数是 C/C++ 公用的，无法做更细的区分。")]),t._v(" "),s("p",[s("code",[t._v("pkg-config")]),t._v(" 工具虽然方便，但是有很多非标准的 C/C++ 库并没有实现对其支持。\n这时候我们可以手工为 "),s("code",[t._v("pkg-config")]),t._v(" 工具创建对应库的编译和链接参数实现支持。")]),t._v(" "),s("p",[t._v("比如有一个名为 xxx 的 C/C++ 库，我们可以手工创建 "),s("code",[t._v("/usr/local/lib/pkgconfig/xxx.pc")]),t._v(" 文件：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Name: xxx\nCflags:-I/usr/local/include\nLibs:-L/usr/local/lib –lxxx2\n")])])]),s("p",[t._v("其中 Name 是库的名字，Cflags 和 Libs 行分别对应 xxx 使用库需要的编译和链接参数。如果 "),s("code",[t._v("pc")]),t._v(" 文件在其它目录，\n可以通过 PKG_CONFIG_PATH 环境变量指定 "),s("code",[t._v("pkg-config")]),t._v(" 工具的检索目录。")]),t._v(" "),s("p",[t._v("而对应 cgo 来说，我们甚至可以通过 PKG_CONFIG 环境变量可指定自定义的 pkg-config 程序。\n如果是自己实现 CGO 专用的 pkg-config 程序，只要处理 "),s("code",[t._v("--cflags")]),t._v(" 和 "),s("code",[t._v("--libs")]),t._v(" 两个参数即可。")]),t._v(" "),s("p",[t._v("下面的程序是 macos 系统下生成 Python3 的编译和链接参数：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// py3-config.go")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("range")]),t._v(" os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Args "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--cflags"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" exec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"python3-config"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--cflags"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CombinedOutput")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-arch"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"i386"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x86_64"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--libs"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" exec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"python3-config"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--ldflags"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CombinedOutput")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("然后通过以下命令构建并使用自定义的 "),s("code",[t._v("pkg-config")]),t._v(" 工具：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ go build -o py3-config py3-config.go\n$ PKG_CONFIG=./py3-config go build -buildmode=c-shared -o gopkg.so main.go\n")])])]),s("p",[t._v("具体的细节可以参考 Go 实现 Python 模块章节。")]),t._v(" "),s("h2",{attrs:{id:"_2-10-4-go-get-链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-10-4-go-get-链"}},[t._v("#")]),t._v(" 2.10.4 go get 链")]),t._v(" "),s("p",[t._v("在使用 "),s("code",[t._v("go get")]),t._v(" 获取 Go 语言包的同时会获取包依赖的包。比如 A 包依赖 B 包，B 包依赖 C 包，C 包依赖 D 包：\n"),s("code",[t._v("pkgA -> pkgB -> pkgC -> pkgD -> ...")]),t._v("。再 go get 获取 A 包之后会依次线获取 BCD 包。\n如果在获取 B 包之后构建失败，那么将导致链条的断裂，从而导致 A 包的构建失败。")]),t._v(" "),s("p",[t._v("链条断裂的原因有很多，其中常见的原因有：")]),t._v(" "),s("ul",[s("li",[t._v("不支持某些系统, 编译失败")]),t._v(" "),s("li",[t._v("依赖 cgo, 用户没有安装 gcc")]),t._v(" "),s("li",[t._v("依赖 cgo, 但是依赖的库没有安装")]),t._v(" "),s("li",[t._v("依赖 pkg-config, windows 上没有安装")]),t._v(" "),s("li",[t._v("依赖 pkg-config, 没有找到对应的 bc 文件")]),t._v(" "),s("li",[t._v("依赖 自定义的 pkg-config, 需要额外的配置")]),t._v(" "),s("li",[t._v("依赖 swig, 用户没有安装 swig, 或版本不对")])]),t._v(" "),s("p",[t._v("仔细分析可以发现，失败的原因中和 CGO 相关的问题占了绝大多数。这并不是偶然现象，\n自动化构建 C/C++ 代码一直是一个世界难题，到目前位置也没有出现一个大家认可的统一的 C/C++ 管理工具。")]),t._v(" "),s("p",[t._v("因为用了 cgo，比如 gcc 等构建工具是必须安装的，同时尽量要做到对主流系统的支持。\n如果依赖的 C/C++ 包比较小并且有源代码的前提下，可以优先选择从代码构建。")]),t._v(" "),s("p",[t._v("比如 "),s("code",[t._v("github.com/chai2010/webp")]),t._v(" 包通过为每个 C/C++ 源文件在当前包建立关键文件实现零配置依赖：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('// z_libwebp_src_dec_alpha.c\n#include "./internal/libwebp/src/dec/alpha.c"\n')])])]),s("p",[t._v("因此在编译 "),s("code",[t._v("z_libwebp_src_dec_alpha.c")]),t._v(" 文件时，会编译 libweb 原生的代码。\n其中的依赖是相对目录，对于不同的平台支持可以保持最大的一致性。")]),t._v(" "),s("h2",{attrs:{id:"_2-10-5-多个非-main-包中导出-c-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-10-5-多个非-main-包中导出-c-函数"}},[t._v("#")]),t._v(" 2.10.5 多个非 main 包中导出 C 函数")]),t._v(" "),s("p",[t._v("官方文档说明导出的 Go 函数要放 main 包，但是真实情况是其它包的 Go 导出函数也是有效的。\n因为导出后的 Go 函数就可以当作 C 函数使用，所以必须有效。但是不同包导出的 Go 函数将在同一个全局的名字空间，因此需要小心避免重名的问题。\n如果是从不同的包导出 Go 函数到 C 语言空间，那么 cgo 自动生成的 "),s("code",[t._v("_cgo_export.h")]),t._v(" 文件将无法包含全部导出的函数声明，\n我们必须通过手写头文件的方式声明导出的全部函数。")])])}),[],!1,null,null,null);s.default=p.exports}}]);