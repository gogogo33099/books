(window.webpackJsonp=window.webpackJsonp||[]).push([[313],{748:function(t,s,i){"use strict";i.r(s);var a=i(14),e=Object(a.a)({},(function(){var t=this._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h1",{attrs:{id:"第4章-复合数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第4章-复合数据类型"}},[this._v("#")]),this._v(" 第4章　复合数据类型")]),this._v(" "),t("p",[this._v("在第三章我们讨论了基本数据类型，它们可以用于构建程序中数据的结构，是Go语言世界的原子。在本章，我们将讨论复合数据类型，它是以不同的方式组合基本类型而构造出来的复合数据类型。我们主要讨论四种类型——数组、slice、map和结构体——同时在本章的最后，我们将演示如何使用结构体来解码和编码到对应JSON格式的数据，并且通过结合使用模板来生成HTML页面。")]),this._v(" "),t("p",[this._v("数组和结构体是聚合类型；它们的值由许多元素或成员字段的值组成。数组是由同构的元素组成——每个数组元素都是完全相同的类型——结构体则是由异构的元素组成的。数组和结构体都是有固定内存大小的数据结构。相比之下，slice和map则是动态的数据结构，它们将根据需要动态增长。")])])}),[],!1,null,null,null);s.default=e.exports}}]);