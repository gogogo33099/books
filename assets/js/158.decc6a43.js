(window.webpackJsonp=window.webpackJsonp||[]).push([[158],{549:function(a,s,t){"use strict";t.r(s);var e=t(14),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"文本处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文本处理"}},[a._v("#")]),a._v(" 文本处理")]),a._v(" "),s("h2",{attrs:{id:"cat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cat"}},[a._v("#")]),a._v(" cat")]),a._v(" "),s("p",[s("code",[a._v("cat")]),a._v("可以文件的内容，显示在标准输出。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" text1\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" apple\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" pear\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" banana\n")])])]),s("p",[a._v("它也可以同时输出多个文件内容。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" text1 text2\n")])])]),s("p",[a._v("它与重定向结合，就可以合并多个文件。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 合并文本文件")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" text* "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" text.all\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 合并二进制文件")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" movie.mpeg.0* "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" movie.mpeg\n")])])]),s("p",[a._v("如果调用"),s("code",[a._v("cat")]),a._v("命令时没有任何参数，它将读取标准输入，然后显示到标准输出。按下"),s("code",[a._v("Ctrl + d")]),a._v("，将会结束"),s("code",[a._v("cat")]),a._v("读取标准输入。利用这一点，可以将键盘输入写入指定文件，按下"),s("code",[a._v("Ctrl + d")]),a._v("结束输入。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" lazy_dog.txt\n")])])]),s("p",[a._v("它的参数如下。")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("-n")]),a._v(" 输出结果显示行号")]),a._v(" "),s("li",[s("code",[a._v("-s")]),a._v(" 将多个连续的空白行，输出为一行")]),a._v(" "),s("li",[s("code",[a._v("-A")]),a._v(" 输出结果中显示控制符，比如Tab键显示为"),s("code",[a._v("^I")]),a._v("，行尾显示"),s("code",[a._v("$")])])]),a._v(" "),s("p",[s("code",[a._v("cat")]),a._v("支持Here document，显示多行文本。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("_EOF_\n<HTML>\n         <HEAD>\n                <TITLE>"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$TITLE")]),a._v("</TITLE>\n         </HEAD>\n         <BODY>\n                <H1>"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$TITLE")]),a._v("</H1>\n                <P>"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$TIME_STAMP")]),a._v("</P>\n         </BODY>\n</HTML>\n_EOF_")]),a._v("\n")])])]),s("p",[a._v("Here document 常在脚本当中作为输入的手段。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-k2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v("END\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" apple\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" pear\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" banana\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" END\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" apple\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" banana\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" pear\n")])])]),s("p",[a._v("如果使用"),s("code",[a._v("<<-")]),a._v("代替"),s("code",[a._v("<<")]),a._v("，行首的tab键将被剥离。")]),a._v(" "),s("h2",{attrs:{id:"nl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nl"}},[a._v("#")]),a._v(" nl")]),a._v(" "),s("p",[s("code",[a._v("nl")]),a._v("命令为文本文件添加行号，显示在标准输出。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("nl")]),a._v(" example.txt\n")])])]),s("h2",{attrs:{id:"sort"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sort"}},[a._v("#")]),a._v(" sort")]),a._v(" "),s("p",[s("code",[a._v("sort")]),a._v("命令将文本文件的所有行排序后输出。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" file1.txt file2.txt file3.txt "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" final_sorted_list.txt\n")])])]),s("p",[a._v("它的参数如下。")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("-b")]),a._v(" "),s("code",[a._v("--ignore-leading-blanks")]),a._v(" 默认情况下，排序用的是每行的第一个字符。这个参数忽略每行开头的空格，从第一个非空白字符开始排序。")]),a._v(" "),s("li",[s("code",[a._v("-f")]),a._v(" "),s("code",[a._v("--ignore-case")]),a._v(" 让排序不区分大小写。")]),a._v(" "),s("li",[s("code",[a._v("-n")]),a._v(" "),s("code",[a._v("--numeric-sort")]),a._v(" 按照数值排序，而不是字符值，用于行首是数值的情况。")]),a._v(" "),s("li",[s("code",[a._v("-r")]),a._v(" "),s("code",[a._v("--reverse")]),a._v(" 按相反顺序排序。结果按照降序排列，而不是升序。")]),a._v(" "),s("li",[s("code",[a._v("-k")]),a._v(" "),s("code",[a._v("--key=field1[,field2]")]),a._v(" 指定按照每行的第几个字段（从1开始）排序，而不是按照行首字符排序。该属性可以多个连用，用于指定多重排序标准，还可以指定每个字段指定排序标准，这些值与全局属性一致，比如b（忽略开头的空格），n（数值排序），r（逆向排序）等等。")]),a._v(" "),s("li",[s("code",[a._v("-m")]),a._v(" "),s("code",[a._v("--merge")]),a._v(" 把每个参数看作是一个预先排好序的文件。把多个文件合并成一个排好序的文件，而没有执行额外的排序。")]),a._v(" "),s("li",[s("code",[a._v("-o")]),a._v(" "),s("code",[a._v("--output=file")]),a._v(" 把排好序的输出结果发送到文件，而不是标准输出。")]),a._v(" "),s("li",[s("code",[a._v("-t")]),a._v(" "),s("code",[a._v("--field-separator=char")]),a._v(" 定义字段分隔字符。默认情况下，字段由空格或制表符分隔。")]),a._v(" "),s("li",[s("code",[a._v("-u")]),a._v(" 输出结果中删除重复行")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--key")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1,1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--key")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("2n distros.txt\n")])])]),s("p",[a._v("上面命令中，第一个"),s("code",[a._v("--key")]),a._v("指定第一排序标准是只用第一字段（"),s("code",[a._v("1,1")]),a._v("），也可以指定使用第一字段第一个字符（"),s("code",[a._v("1.1")]),a._v("）；第二排序标准是第二字段，按数值排序。")]),a._v(" "),s("h2",{attrs:{id:"uniq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uniq"}},[a._v("#")]),a._v(" uniq")]),a._v(" "),s("p",[s("code",[a._v("uniq")]),a._v("命令在排序后的行中，删除所有重复的行，保证所有输出没有重复。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" /bin /usr/bin "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("uniq")]),a._v("\n")])])]),s("p",[a._v("它的参数如下。")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("-c")]),a._v("\t输出所有的重复行，并且每行开头显示重复的次数。")]),a._v(" "),s("li",[s("code",[a._v("-d")]),a._v("\t只输出重复行，而不是不重复的文本行。")]),a._v(" "),s("li",[s("code",[a._v("-f n")]),a._v("\t忽略每行开头的 n 个字段，字段之间由空格分隔，正如 sort 程序中的空格分隔符；然而， 不同于 sort 程序，uniq 没有选项来设置备用的字段分隔符。")]),a._v(" "),s("li",[s("code",[a._v("-i")]),a._v("\t在比较文本行的时候忽略大小写。")]),a._v(" "),s("li",[s("code",[a._v("-s n")]),a._v("\t跳过（忽略）每行开头的 n 个字符。")]),a._v(" "),s("li",[s("code",[a._v("-u")]),a._v("\t只是输出独有的文本行。这是默认的。")]),a._v(" "),s("li",[s("code",[a._v("-V")]),a._v(" 按照版本号排序。")])]),a._v(" "),s("p",[s("code",[a._v("-V")]),a._v("参数可以按版本号排列（从小到大）。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-V")]),a._v(" input.txt\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.0")]),a._v(".15\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.3")]),a._v(".0\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2.1")]),a._v(".2\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.0")]),a._v(".0\n")])])]),s("p",[s("code",[a._v("-rV")]),a._v("参数可以按版本号逆序排列。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rV")]),a._v(" input.txt\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.0")]),a._v(".0\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2.1")]),a._v(".2\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.3")]),a._v(".0\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.0")]),a._v(".15\n")])])]),s("h2",{attrs:{id:"cut"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cut"}},[a._v("#")]),a._v(" cut")]),a._v(" "),s("p",[s("code",[a._v("cut")]),a._v("程序用来从文本行中抽取文本，并把其输出到标准输出。它能够接受多个文件参数或者标准输入。")]),a._v(" "),s("p",[a._v("它的参数如下。")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("-c char_list")]),a._v(" 抽取指定范围的文本")]),a._v(" "),s("li",[s("code",[a._v("-f field_list")]),a._v(" 抽取指定字段，字段之间可以tab分隔也可以逗号分隔")]),a._v(" "),s("li",[s("code",[a._v("-d delim_char")]),a._v(" 指定字段分隔符，默认是tab键")]),a._v(" "),s("li",[s("code",[a._v("--complement")]),a._v("\t抽取整个文本行，除了那些由-c 和／或-f 选项指定的文本。")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 抽取每行的第三个字段")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cut")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" distros.txt\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 抽取每行的第7到第10个字符")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cut")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),a._v("-10 distros.txt\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 抽取每行的第23个到结尾的字符1")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cut")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23")]),a._v("- distros.txt\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 指定字段分隔符为冒号")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cut")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("':'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" /etc/passwd\n")])])]),s("h2",{attrs:{id:"paste"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#paste"}},[a._v("#")]),a._v(" paste")]),a._v(" "),s("p",[s("code",[a._v("paste")]),a._v("程序将多个文本文件按行合并，即每一行都由原来文本文件的每一行组成，显示在标准输出。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("paste")]),a._v(" distros-dates.txt distros-versions.txt\n")])])]),s("h2",{attrs:{id:"wc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wc"}},[a._v("#")]),a._v(" wc")]),a._v(" "),s("p",[s("code",[a._v("wc")]),a._v("命令输出一个文本文件的统计信息（word count），一共有三个值，分别为行数、词数和字节数。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wc")]),a._v(" ls-output.txt\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("7902")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("64566")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("503634")]),a._v(" ls-output.txt\n")])])]),s("p",[a._v("如果使用"),s("code",[a._v("-l")]),a._v("参数，则只输出行数。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" /bin /usr/bin "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("uniq")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wc")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2728")]),a._v("\n")])])]),s("h2",{attrs:{id:"head"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#head"}},[a._v("#")]),a._v(" head")]),a._v(" "),s("p",[s("code",[a._v("head")]),a._v("命令返回文本文件的头部，默认显示10行。")]),a._v(" "),s("p",[s("code",[a._v("-n")]),a._v("参数指定显示的行数。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("head")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" ls-output.txt\n")])])]),s("h2",{attrs:{id:"tail"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tail"}},[a._v("#")]),a._v(" tail")]),a._v(" "),s("p",[s("code",[a._v("tail")]),a._v("命令返回文本文件的尾部，默认显示10行。")]),a._v(" "),s("p",[s("code",[a._v("-n")]),a._v("参数指定显示的行数。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tail")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" ls-output.txt\n")])])]),s("p",[s("code",[a._v("-f")]),a._v("会实时追加显示新增的内容，常用于实时监控日志，按"),s("code",[a._v("Ctrl + c")]),a._v("停止。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tail")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" /var/log/messages\n")])])]),s("h2",{attrs:{id:"grep"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grep"}},[a._v("#")]),a._v(" grep")]),a._v(" "),s("p",[s("code",[a._v("grep")]),a._v("程序用于在指定文件之中，搜索符合某个模式的行，并把搜索结果输出到标准输出。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" keyword foo.txt\n")])])]),s("p",[a._v("上面命令输出"),s("code",[a._v("foo.txt")]),a._v("之中匹配"),s("code",[a._v("keyword")]),a._v("的行。")]),a._v(" "),s("p",[s("code",[a._v("grep")]),a._v("程序可以同时搜索多个文件。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" keyword f*.txt\n")])])]),s("p",[a._v("上面命令输出多个文件中匹配"),s("code",[a._v("keyword")]),a._v("的行。")]),a._v(" "),s("p",[s("code",[a._v("-l")]),a._v("参数输出匹配的文件名，而不是文件行。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" bzip dirlist*.txt\n")])])]),s("p",[a._v("如果想搜索文件名，而不是文件内容，可以使用重定向。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" /usr/bin "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v("\n")])])]),s("p",[a._v("上面命令会输出"),s("code",[a._v("/usr/bin")]),a._v("目录中，文件名中包含子字符串"),s("code",[a._v("zip")]),a._v("的所有文件。")]),a._v(" "),s("p",[a._v("参数的含义。")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("-c")]),a._v("或"),s("code",[a._v("--count")]),a._v(" 输出匹配的数量，而不是匹配的文本行。如果使用了"),s("code",[a._v("-v")]),a._v("，则输出不匹配的数量。")]),a._v(" "),s("li",[s("code",[a._v("-h")]),a._v("或"),s("code",[a._v("--no-filename")]),a._v(" 应用于多文件搜索，不在每行匹配的文本前，输出文件名")]),a._v(" "),s("li",[s("code",[a._v("-i")]),a._v("或"),s("code",[a._v("--ignore-case")]),a._v(" 忽略大小写")]),a._v(" "),s("li",[s("code",[a._v("-l")]),a._v("或"),s("code",[a._v("--files-with-matches")]),a._v(" 输出包含匹配项的文件名，而不是文本行本身")]),a._v(" "),s("li",[s("code",[a._v("-L")]),a._v("或"),s("code",[a._v("--files-without-match")]),a._v(" 类似于"),s("code",[a._v("-l")]),a._v("，但输出不包含匹配项的文件名")]),a._v(" "),s("li",[s("code",[a._v("-n")]),a._v("或"),s("code",[a._v("--line-number")]),a._v(" 每个匹配行之前输出其对应的行号")]),a._v(" "),s("li",[s("code",[a._v("-v")]),a._v("或"),s("code",[a._v("--invert-match")]),a._v(" 只返回不符合模式的行")])]),a._v(" "),s("h2",{attrs:{id:"sed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sed"}},[a._v("#")]),a._v(" sed")]),a._v(" "),s("p",[s("code",[a._v("sed")]),a._v("是一个强大的文本编辑工具。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 输出前5行")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'1,5p'")]),a._v(" distros.txt\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 输出包含指定内容的行")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/SUSE/p'")]),a._v(" distros.txt\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 输出不包含指定内容的行")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/SUSE/!p'")]),a._v(" distros.txt\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 替换内容（只替换第一个）")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'s/regexp/replacement/'")]),a._v(" distros.txt\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 替换内容（全局替换）")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'s/regexp/replacement/g'")]),a._v(" distros.txt\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);