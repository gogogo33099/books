(window.webpackJsonp=window.webpackJsonp||[]).push([[541],{1008:function(t,o,e){"use strict";e.r(o);var r=e(14),a=Object(r.a)({},(function(){var t=this,o=t._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"_2-8-go-解释器"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-go-解释器"}},[t._v("#")]),t._v(" 2.8 Go 解释器")]),t._v(" "),o("p",[t._v("因为 Go 具有像动态语言那样快速编译的能力，自然而然地就有人会问 Go 语言能否在 REPL (read-eval-print loop) 编程环境下实现。Sebastien Binet 已经使用这种环境实现了一个 Go 解释器，你可以在这个页面找到："),o("a",{attrs:{href:"https://github.com/sbinet/igo",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/sbinet/igo"),o("OutboundLink")],1),t._v("。")]),t._v(" "),o("h2",{attrs:{id:"链接"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#链接"}},[t._v("#")]),t._v(" 链接")]),t._v(" "),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/the-way-to-go/directory.html"}},[t._v("目录")])],1),t._v(" "),o("li",[t._v("上一节："),o("RouterLink",{attrs:{to:"/the-way-to-go/02.7.html"}},[t._v("Go 运行时 (runtime)")])],1),t._v(" "),o("li",[t._v("下一章："),o("RouterLink",{attrs:{to:"/the-way-to-go/03.0.html"}},[t._v("编辑器、集成开发环境与其它工具")])],1)])])}),[],!1,null,null,null);o.default=a.exports}}]);