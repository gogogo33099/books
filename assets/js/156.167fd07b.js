(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{547:function(a,s,t){"use strict";t.r(s);var v=t(14),_=Object(v.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[a._v("#")]),a._v(" 正则表达式")]),a._v(" "),s("p",[s("code",[a._v("正则表达式")]),a._v("是表达文本模式的方法。")]),a._v(" "),s("ul",[s("li",[s("code",[a._v(".")]),a._v("：匹配任何单个字符。")]),a._v(" "),s("li",[s("code",[a._v("?")]),a._v("：上一项是可选的，最多匹配一次。")]),a._v(" "),s("li",[s("code",[a._v("*")]),a._v("：前一项将被匹配零次或多次。")]),a._v(" "),s("li",[s("code",[a._v("+")]),a._v("：前一项将被匹配一次或多次。")]),a._v(" "),s("li",[s("code",[a._v("{N}")]),a._v("：上一项完全匹配N次。")]),a._v(" "),s("li",[s("code",[a._v("{N，}")]),a._v("：前一项匹配N次或多次。")]),a._v(" "),s("li",[s("code",[a._v("{N，M}")]),a._v("：前一项至少匹配N次，但不超过M次。")]),a._v(" "),s("li",[s("code",[a._v("--")]),a._v("：表示范围，如果它不是列表中的第一个或最后一个，也不是列表中某个范围的终点。")]),a._v(" "),s("li",[s("code",[a._v("^")]),a._v("：匹配行首的空字符串；也代表不在列表范围内的字符。")]),a._v(" "),s("li",[s("code",[a._v("$")]),a._v("：匹配行尾的空字符串。")]),a._v(" "),s("li",[s("code",[a._v("\\b")]),a._v("：匹配单词边缘的空字符串。")]),a._v(" "),s("li",[s("code",[a._v("\\B")]),a._v("：匹配空字符串，前提是它不在单词的边缘。")]),a._v(" "),s("li",[s("code",[a._v("\\<")]),a._v("：匹配单词开头的空字符串。")]),a._v(" "),s("li",[s("code",[a._v("\\>")]),a._v("：匹配单词末尾的空字符串。")])]),a._v(" "),s("h2",{attrs:{id:"元字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元字符"}},[a._v("#")]),a._v(" 元字符")]),a._v(" "),s("p",[s("code",[a._v("元字符")]),a._v("是表示特殊函数的字符，包括以下这些"),s("code",[a._v("^ $ . [ ] { } - ? * + ( ) | \\\\")]),a._v("。除了元字符，其他字符在正则表达式中，都表示原来的含义。")]),a._v(" "),s("ul",[s("li",[s("code",[a._v(".")]),a._v(" 匹配任意字符，但不含空字符")]),a._v(" "),s("li",[s("code",[a._v("^")]),a._v(" 匹配文本行开头")]),a._v(" "),s("li",[s("code",[a._v("$")]),a._v(" 匹配文本行结尾")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-h")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'.zip'")]),a._v(" dirlist*.txt\n")])])]),s("p",[a._v("上面命令在文件中查找包含正则表达式“.zip”的文本行。注意，上面命令不会匹配"),s("code",[a._v("zip")]),a._v("程序，因为"),s("code",[a._v("zip")]),a._v("只有三个字符，而"),s("code",[a._v(".zip")]),a._v("要求四个字符。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-h")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'^zip'")]),a._v(" dirlist*.txt\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-h")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'zip$'")]),a._v(" dirlist*.txt\n")])])]),s("p",[a._v("上面命令分别在文件列表中搜索行首，行尾以及行首和行尾同时包含字符串“zip”（例如，zip 独占一行）的匹配行。 注意正则表达式‘^$’（行首和行尾之间没有字符）会匹配空行。")]),a._v(" "),s("h2",{attrs:{id:"方括号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方括号"}},[a._v("#")]),a._v(" 方括号")]),a._v(" "),s("p",[a._v("方括号之中的字符，表示可以任意匹配其中的一个。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-h")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[bg]zip'")]),a._v(" dirlist*.txt\n")])])]),s("p",[a._v("上面命令匹配包含字符串“bzip”或者“gzip”的任意行。")]),a._v(" "),s("p",[a._v("注意，元字符放入方括号之中，会失去其特殊含义。但有两种情况除外，"),s("code",[a._v("^")]),a._v("在方括号的开头，表示否定，否则只是一个普通字符，表示原义。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-h")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[^bg]zip'")]),a._v(" dirlist*.txt\n")])])]),s("p",[a._v("上面命令匹配不以"),s("code",[a._v("b")]),a._v("或"),s("code",[a._v("g")]),a._v("开头的"),s("code",[a._v("zip")]),a._v("字符串。注意，上面命令不会匹配"),s("code",[a._v("zip")]),a._v("，因为一个否定的字符集仍然要求存在一个字符。")]),a._v(" "),s("p",[s("code",[a._v("-")]),a._v("在方括号之中表示一个字符区域。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-h")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'^[A-Z]'")]),a._v(" dirlist*.txt\n")])])]),s("p",[a._v("上面命令匹配所有以大写字母开头的文本行。类似的，"),s("code",[a._v("^[A-Za-z0-9]")]),a._v("表示以大写字母、小写字母、数字开头的文本行。")]),a._v(" "),s("p",[a._v("注意，连字号如果不构成一个字符区域，则表示其本来的含义。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-h")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[-AZ]'")]),a._v(" dirlist*.txt\n")])])]),s("p",[a._v("上面命令匹配包含一个连字符，或一个大写字母“A”，或一个大写字母“Z”的文件名。")]),a._v(" "),s("h2",{attrs:{id:"预定义字符类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预定义字符类"}},[a._v("#")]),a._v(" 预定义字符类")]),a._v(" "),s("p",[a._v("由于"),s("code",[a._v("locale")]),a._v("设置不同，Shell展开正则表达式"),s("code",[a._v("[A-Z]")]),a._v("时，可能不是解释为所有大写字母，而是解释为包括所有字母的字典顺序。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" /usr/sbin/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("A-Z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("*\n")])])]),s("p",[a._v("上面命令在某些发行版里面，会返回所有大写字母或小写字母开头的文件。")]),a._v(" "),s("p",[a._v("为了避免这个问题，可以使用正则表达式的预定义字符类。")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("[:alnum:]")]),a._v("\t字母数字字符。在 ASCII 中，等价于："),s("code",[a._v("[A-Za-z0-9]")])]),a._v(" "),s("li",[s("code",[a._v("[:word:]")]),a._v("\t与"),s("code",[a._v("[:alnum:]")]),a._v("相同, 但增加了下划线字符。")]),a._v(" "),s("li",[s("code",[a._v("[:alpha:]")]),a._v("\t字母字符。在 ASCII 中，等价于"),s("code",[a._v("[A-Za-z]")])]),a._v(" "),s("li",[s("code",[a._v("[:blank:]")]),a._v("\t包含空格和 tab 字符。")]),a._v(" "),s("li",[s("code",[a._v("[:cntrl:]")]),a._v("\tASCII 的控制码。包含了0到31，和127的 ASCII 字符。")]),a._v(" "),s("li",[s("code",[a._v("[:digit:]")]),a._v("\t数字0到9")]),a._v(" "),s("li",[s("code",[a._v("[:graph:]")]),a._v("\t可视字符。在 ASCII 中，它包含33到126的字符。")]),a._v(" "),s("li",[s("code",[a._v("[:lower:]")]),a._v("\t小写字母。")]),a._v(" "),s("li",[s("code",[a._v("[:punct:]")]),a._v("\t标点符号字符。")]),a._v(" "),s("li",[s("code",[a._v("[:print:]")]),a._v("\t可打印的字符。等于"),s("code",[a._v("[:graph:]")]),a._v("中的所有字符，再加上空格字符。")]),a._v(" "),s("li",[s("code",[a._v("[:space:]")]),a._v("\t空白字符，包括空格，tab，回车，换行，vertical tab, 和 form feed.在 ASCII 中， 等价于"),s("code",[a._v("[ \\t\\r\\n\\v\\f]")])]),a._v(" "),s("li",[s("code",[a._v("[:upper:]")]),a._v("\t大写字母。")]),a._v(" "),s("li",[s("code",[a._v("[:xdigit:]")]),a._v("\t用来表示十六进制数字的字符。在 ASCII 中，等价于"),s("code",[a._v("[0-9A-Fa-f]")])])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" /usr/sbin/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(":upper:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("*\n")])])]),s("p",[a._v("上面命令返回所有大写字母开头的文件名。")]),a._v(" "),s("h2",{attrs:{id:"选择"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选择"}},[a._v("#")]),a._v(" 选择")]),a._v(" "),s("p",[s("code",[a._v("|")]),a._v("表示匹配一系列字符串之中的一个。注意与方括号区分，方括号表示匹配一系列字符之中的一个。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"AAA"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-E")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'AAA|BBB'")]),a._v("\nAAA\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"BBB"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-E")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'AAA|BBB'")]),a._v("\nBBB\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"CCC"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-E")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'AAA|BBB'")]),a._v("\n$\n")])])]),s("p",[a._v("上面代码中，"),s("code",[a._v("AAA|BBB")]),a._v("表示匹配字符串"),s("code",[a._v("AAA")]),a._v("或者是字符串"),s("code",[a._v("BBB")]),a._v("。"),s("code",[a._v("grep")]),a._v("程序使用"),s("code",[a._v("-E")]),a._v("参数，表示按照正则表达式规则匹配。并且，这个正则表达式放在单引号之中，为的是阻止Shell把"),s("code",[a._v("|")]),a._v("解释为管道操作符。")]),a._v(" "),s("p",[s("code",[a._v("|")]),a._v("可以多个连用，也可以与其他正则规则结合使用。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"AAA"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-E")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'AAA|BBB|CCC'")]),a._v("\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Eh")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'^(bz|gz|zip)'")]),a._v(" dirlist*.txt\n")])])]),s("h2",{attrs:{id:"量词操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#量词操作符"}},[a._v("#")]),a._v(" 量词操作符")]),a._v(" "),s("p",[a._v("量词操作符表示一个元素被匹配的次数。")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("?")]),a._v(" 匹配前面的元素出现0次或1次")]),a._v(" "),s("li",[s("code",[a._v("*")]),a._v(" 匹配前面的元素出现0次或多次")]),a._v(" "),s("li",[s("code",[a._v("+")]),a._v(" 匹配前面的元素出现1次或多次")]),a._v(" "),s("li",[s("code",[a._v("{n}")]),a._v(" 匹配前面的元素出现了"),s("code",[a._v("n")]),a._v("次")]),a._v(" "),s("li",[s("code",[a._v("{n,m}")]),a._v(" 匹配前面的元素它至少出现了"),s("code",[a._v("n")]),a._v("次，但是不多于"),s("code",[a._v("m")]),a._v("次")]),a._v(" "),s("li",[s("code",[a._v("{n,}")]),a._v(" 匹配前面的元素至少出现了"),s("code",[a._v("n")]),a._v("次")]),a._v(" "),s("li",[s("code",[a._v("{,m}")]),a._v(" 匹配前面的元素，如果它出现的次数不多于 m 次。")])])])}),[],!1,null,null,null);s.default=_.exports}}]);