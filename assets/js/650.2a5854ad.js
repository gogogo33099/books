(window.webpackJsonp=window.webpackJsonp||[]).push([[650],{1126:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_14-13-在多核心上并行计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-13-在多核心上并行计算"}},[t._v("#")]),t._v(" 14.13 在多核心上并行计算")]),t._v(" "),s("p",[t._v("假设我们有 "),s("code",[t._v("NCPU")]),t._v(" 个 CPU 核心："),s("code",[t._v("const NCPU = 4 //对应一个四核处理器")]),t._v(" 然后我们想把计算量分成 "),s("code",[t._v("NCPU")]),t._v(" 个部分，每一个部分都和其他部分并行运行。")]),t._v(" "),s("p",[t._v("这可以通过以下代码所示的方式完成（我们且省略具体参数）")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("DoAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sem "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("chan")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NCPU"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Buffering optional but sensible")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NCPU"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("DoPart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Drain the channel sem, waiting for NCPU tasks to complete")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NCPU"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v("sem "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// wait for one task to complete")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// All done.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("DoPart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sem "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("chan")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do the part of the computation")]),t._v("\n    sem "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// signal that this piece is done")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    runtime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GOMAXPROCS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NCPU"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// runtime.GOMAXPROCS = NCPU")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("DoAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[s("code",[t._v("DoAll()")]),t._v(" 函数创建了一个 "),s("code",[t._v("sem")]),t._v(" 通道，每个并行计算都将在对其发送完成信号；在一个 "),s("code",[t._v("for")]),t._v(" 循环中 "),s("code",[t._v("NCPU")]),t._v(" 个协程被启动了，每个协程会承担 "),s("code",[t._v("1/NCPU")]),t._v(" 的工作量。每一个 "),s("code",[t._v("DoPart()")]),t._v(" 协程都会向 "),s("code",[t._v("sem")]),t._v(" 通道发送完成信号。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("DoAll()")]),t._v(" 会在 "),s("code",[t._v("for")]),t._v(" 循环中等待 "),s("code",[t._v("NCPU")]),t._v(" 个协程完成："),s("code",[t._v("sem")]),t._v(" 通道就像一个信号量，这份代码展示了一个经典的信号量模式。（参见 "),s("RouterLink",{attrs:{to:"/the-way-to-go/14.2.html#1427-信号量模式"}},[t._v("14.2.7")]),t._v("）")],1)])]),t._v(" "),s("p",[t._v("在以上运行模型中，您还需将 "),s("code",[t._v("GOMAXPROCS")]),t._v(" 设置为 "),s("code",[t._v("NCPU")]),t._v("（参见 "),s("RouterLink",{attrs:{to:"/the-way-to-go/14.1.html#1413-使用-gomaxprocs"}},[t._v("14.1.3")]),t._v("）。")],1),t._v(" "),s("h2",{attrs:{id:"链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链接"}},[t._v("#")]),t._v(" 链接")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/the-way-to-go/directory.html"}},[t._v("目录")])],1),t._v(" "),s("li",[t._v("上一节："),s("RouterLink",{attrs:{to:"/the-way-to-go/14.12.html"}},[t._v("协程链")])],1),t._v(" "),s("li",[t._v("下一节："),s("RouterLink",{attrs:{to:"/the-way-to-go/14.14.html"}},[t._v("并行化大量数据的计算")])],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);