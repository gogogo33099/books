(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{540:function(a,s,t){"use strict";t.r(s);var e=t(14),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"文件系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件系统"}},[a._v("#")]),a._v(" 文件系统")]),a._v(" "),s("h2",{attrs:{id:"pwd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pwd"}},[a._v("#")]),a._v(" pwd")]),a._v(" "),s("p",[s("code",[a._v("pwd")]),a._v("命令显示列出当前所在的目录。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("pwd")]),a._v("\n")])])]),s("h2",{attrs:{id:"cd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cd"}},[a._v("#")]),a._v(" cd")]),a._v(" "),s("p",[s("code",[a._v("cd")]),a._v("命令用来改变用户所在的目录。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 进入用户的主目录")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 进入前一个工作目录")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" -\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 进入指定用户的主目录")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" ~user_name\n")])])]),s("h2",{attrs:{id:"ls"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ls"}},[a._v("#")]),a._v(" ls")]),a._v(" "),s("p",[s("code",[a._v("ls")]),a._v("目录可以显示指定目录的内容。不加参数时，显示当前目录的内容。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n")])])]),s("p",[a._v("上面命令显示当前目录的内容。")]),a._v(" "),s("p",[s("code",[a._v("ls")]),a._v("命令也可以显示指定文件是否存在。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" foo.txt\nfoo.txt\n")])])]),s("p",[s("code",[a._v("-l")]),a._v("参数可以显示文件的详细信息。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" foo.txt\n-rw-rw-r-- "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" me   me   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2016")]),a._v("-03-06 "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("14")]),a._v(":52 foo.txt\n")])])]),s("p",[a._v("上面命令输出结果的第一栏，是文件的类型和权限。")]),a._v(" "),s("p",[a._v("文件类型分为以下几种。")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("-")]),a._v(" 普通文件")]),a._v(" "),s("li",[s("code",[a._v("d")]),a._v(" 目录")]),a._v(" "),s("li",[s("code",[a._v("l")]),a._v(' 符号链接。注意，对于符号链接文件，剩余的文件属性总是"rwxrwxrwx"。')]),a._v(" "),s("li",[s("code",[a._v("c")]),a._v(" 字符设备文件，指按照字节流处理数据的设备，比如调制解调器。")]),a._v(" "),s("li",[s("code",[a._v("b")]),a._v(" 块设备文件，指按照数据块处理数据的设备，比如硬盘。")])]),a._v(" "),s("p",[a._v("其他参数的用法。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示多个目录的内容")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" ~ /usr\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -a --all 显示隐藏文件")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -A 与-a类似，但是不显示当前目录和上一级目录两个点文件")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-A")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -l 显示详细信息")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -1 单列显示，每行只显示一个文件")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -d 显示当前目录本身，而不是它的内容")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通常与-l配合使用，列出一个目录本身的详细信息")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-dl")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -F 目录名之后添加斜杠，可执行文件后面添加星号")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-F")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -h 与-l配合使用，将文件大小显示为人类可读的格式")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -t 按文件修改时间排序，修改晚的排在前面")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -s 按文件大小排序，")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# --reverse 显示结果倒序排列")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-lt")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--reverse")]),a._v("\n")])])]),s("p",[a._v("如果只显示一个目录里面的子目录，不显示文件，可以使用下面这些命令。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 只显示常规目录")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" */\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-F")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" /\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" ^d\n$ tree "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-dL")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 只显示隐藏目录")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" .*/\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 隐藏目录和非隐藏目录都显示")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-maxdepth")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" d\n")])])]),s("p",[a._v("另一个简便方法是利用自动补全功能，先键入"),s("code",[a._v("cd")]),a._v("命令，然后连按两下"),s("code",[a._v("tab")]),a._v("键。")]),a._v(" "),s("h2",{attrs:{id:"stat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stat"}},[a._v("#")]),a._v(" stat")]),a._v(" "),s("p",[s("code",[a._v("stat")]),a._v("命令是加强版的"),s("code",[a._v("ls")]),a._v("命令，可以显示一个文件的详细信息。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("stat")]),a._v(" timestamp\nFile: "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'timestamp'")]),a._v("\nSize: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" Blocks: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" IO Block: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4096")]),a._v(" regular empty "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v("\nDevice: 803h/2051d Inode: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("14265061")]),a._v(" Links: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\nAccess: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("0644/-rw-r--r--"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" Uid: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1001")]),a._v("/ me"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" Gid: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1001")]),a._v("/ me"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nAccess: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2008")]),a._v("-10-08 "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("15")]),a._v(":15:39.000000000 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-0400")]),a._v("\nModify: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2008")]),a._v("-10-08 "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("15")]),a._v(":15:39.000000000 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-0400")]),a._v("\nChange: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2008")]),a._v("-10-08 "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("15")]),a._v(":15:39.000000000 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-0400")]),a._v("\n")])])]),s("h2",{attrs:{id:"touch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#touch"}},[a._v("#")]),a._v(" touch")]),a._v(" "),s("p",[s("code",[a._v("touch")]),a._v("用来设置或更新文件的访问，更改，和修改时间。然而，如果一个文件名参数是一个 不存在的文件，则会创建一个空文件。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" timestamp\n")])])]),s("p",[a._v("上面命令创建了一个名为"),s("code",[a._v("timestamp")]),a._v("空文件。如果该文件已经存在，就会把它的修改时间设置为当前时间。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" playground/dir-"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("00"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(",0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("99")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(",100"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" playground/dir-"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("00"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(",0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("99")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(",100"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/file-"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("Z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("上面的命令创建了一个包含一百个子目录，每个子目录中包含了26个空文件。")]),a._v(" "),s("h2",{attrs:{id:"file"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#file"}},[a._v("#")]),a._v(" file")]),a._v(" "),s("p",[s("code",[a._v("file")]),a._v("命令显示指定文件的类型。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v(" picture.jpg\npicture.jpg: JPEG image data, JFIF standard "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.01")]),a._v("\n")])])]),s("h2",{attrs:{id:"chmod"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chmod"}},[a._v("#")]),a._v(" chmod")]),a._v(" "),s("p",[s("code",[a._v("chmod")]),a._v("命令用于更改文件的权限，是“change mode”的缩写。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("600")]),a._v(" foo.txt\n")])])]),s("p",[a._v("上面命令将"),s("code",[a._v("foo.txt")]),a._v("的权限改成了600。")]),a._v(" "),s("p",[s("code",[a._v("chmod")]),a._v("还可以接受四个缩写，为不同的对象单独设置权限。")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("u")]),a._v(" 所有者“user”的简写")]),a._v(" "),s("li",[s("code",[a._v("g")]),a._v(" 用户组“group”的缩写")]),a._v(" "),s("li",[s("code",[a._v("o")]),a._v(" 其他所有人“others”的简写")]),a._v(" "),s("li",[s("code",[a._v("a")]),a._v(" 所有人“all”的简写")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 为所有者添加可执行权限")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" u+x foo.txt\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除所有者的可执行权限")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" u-x foo.txt\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 为所有人添加可执行权限，等价于 a+x")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x foo.txt\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除其他人的读权限和写权限。")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" o-rw foo.txt\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设定用户组和其他人的权限是读权限和写权限")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("go")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("rw foo.txt\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 为所有者添加执行权限，设定用户组和其他人为读权限和写权限，多种设定用逗号分隔")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" u+x,go"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("rw foo.txt\n")])])]),s("p",[a._v("添加权限。")]),a._v(" "),s("ul",[s("li",[a._v("+x 添加执行权限")]),a._v(" "),s("li",[a._v("+r 设置读权限")]),a._v(" "),s("li",[a._v("+w 设置写权限")]),a._v(" "),s("li",[a._v("+rwx 设置所有读、写和执行权限。")])]),a._v(" "),s("p",[a._v("删除权限只需将"),s("code",[a._v("+")]),a._v("更改为"),s("code",[a._v("-")]),a._v("，就可以删除任何已设置的指定权限。可以使用"),s("code",[a._v("-R")]),a._v("（或"),s("code",[a._v("--recursive")]),a._v("）选项来递归地操作目录和文件。")]),a._v(" "),s("p",[a._v("设置精确权限，可以使用"),s("code",[a._v("=")]),a._v("代替"),s("code",[a._v("+")]),a._v("或"),s("code",[a._v("-")]),a._v("来实现此操作。如果想为用户、组或其他用户设置不同的权限，可以使用逗号将不同表达式分开（例如"),s("code",[a._v("ug=rwx,o=rx")]),a._v("）。")]),a._v(" "),s("p",[a._v("由于一共有3种可能的权限。也可以使用八进制数代替符号来设置权限。通过这种方式设置的权限最多使用3个八进制数。第1个数定义用户权限，第2个数定义组权限，第3个数定义其他权限。这3个数中的每一个都通过添加想要的权限设置来构造：读 (4)、写 (2) 和执行 (1)。")]),a._v(" "),s("ul",[s("li",[a._v("rwx\t7")]),a._v(" "),s("li",[a._v("rw-\t6")]),a._v(" "),s("li",[a._v("r-x\t5")]),a._v(" "),s("li",[a._v("r--\t4")]),a._v(" "),s("li",[a._v("-wx\t3")]),a._v(" "),s("li",[a._v("-w-\t2")]),a._v(" "),s("li",[a._v("--x\t1")]),a._v(" "),s("li",[a._v("---\t0")])]),a._v(" "),s("h2",{attrs:{id:"umask"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#umask"}},[a._v("#")]),a._v(" umask")]),a._v(" "),s("p",[s("code",[a._v("umask")]),a._v("用来查看和设置权限掩码。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("umask")]),a._v("\n0022\n")])])]),s("p",[a._v("上面命令显示当前系统之中，默认的文件掩码是"),s("code",[a._v("0022")]),a._v("，转为二进制就是"),s("code",[a._v("000 000 010 010")]),a._v("。")]),a._v(" "),s("p",[a._v("可以看到，这个掩码是一个12位的二进制数，后面的9位分别代表文件三种使用对象的三类权限。只要对应位置上是"),s("code",[a._v("1")]),a._v("，就表示关闭该项权限，所以"),s("code",[a._v("010")]),a._v("就表示关闭读权限。")]),a._v(" "),s("p",[a._v("新建文件时，通常不会带有执行权限，也就是说，新建文件的默认权限是"),s("code",[a._v("rw-rw-rw-")]),a._v("。如果文件掩码是"),s("code",[a._v("0022")]),a._v("，那么用户组和其他人的写权限也会被拿掉。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" new.txt\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" new.txt\n-rw-r--r-- "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" me   me   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2016")]),a._v("-03-06 "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("14")]),a._v(":52 new.txt\n")])])]),s("p",[a._v("上面代码中，"),s("code",[a._v("new.txt")]),a._v("的用户组和其他人的写权限就没了。")]),a._v(" "),s("p",[s("code",[a._v("umask")]),a._v("后面跟着参数，就表示设置权限掩码。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("umask")]),a._v(" 0000\n")])])]),s("p",[a._v("上面命令将权限掩码设为"),s("code",[a._v("0000")]),a._v("，实际上就是关闭了权限掩码。")]),a._v(" "),s("p",[s("code",[a._v("umask")]),a._v("命令设置的掩码值只能在当前Shell会话中生效，若当前Shell会话结束后，则必须重新设置。")]),a._v(" "),s("h2",{attrs:{id:"du"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#du"}},[a._v("#")]),a._v(" du")]),a._v(" "),s("p",[s("code",[a._v("du")]),a._v("命令用于查看指定目录的大小。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("du")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-hs")]),a._v(" /path/to/directory\n")])])]),s("p",[a._v("显示第一层子目录的大小。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("du")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-h")]),a._v(" --max-depth"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" /path/to/folder\n")])])]),s("p",[a._v("参数的含义。")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("-h")]),a._v(" 表示人类可读的格式")]),a._v(" "),s("li",[s("code",[a._v("-s")]),a._v(" 表示总结信息，否则会显示该目录内所有文件和子目录的信息。")])]),a._v(" "),s("p",[s("code",[a._v("tree")]),a._v("命令也可以显示子目录大小。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ tree "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--du")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-h")]),a._v(" /path/to/directory\n")])])]),s("h2",{attrs:{id:"md5sum"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#md5sum"}},[a._v("#")]),a._v(" md5sum")]),a._v(" "),s("p",[s("code",[a._v("md5sum")]),a._v("命令用来显示一个文件的md5校验码。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ md5sum image.iso\n34e354760f9bb7fbf85c96f6a3f94ece    image.iso\n")])])]),s("h2",{attrs:{id:"locate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#locate"}},[a._v("#")]),a._v(" locate")]),a._v(" "),s("p",[s("code",[a._v("locate")]),a._v("程序快速搜索本机的路径名数据库，并且输出每个与给定字符串相匹配的文件名。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("locate")]),a._v(" bin/zip\n/usr/bin/zip\n/usr/bin/zipcloak\n/usr/bin/zipgrep\n/usr/bin/zipinfo\n/usr/bin/zipnote\n/usr/bin/zipsplit\n")])])]),s("p",[s("code",[a._v("locate")]),a._v("数据库由另一个叫做"),s("code",[a._v("updatedb")]),a._v("的程序创建。大多数装有 locate 的系统会每隔一天运行一回 updatedb 程序。因为数据库不能被持续地更新，所以当使用 locate 时，你会发现 目前最新的文件不会出现。为了克服这个问题，可以手动运行 updatedb 程序， 更改为超级用户身份，在提示符下运行 updatedb 命令。")]),a._v(" "),s("p",[s("code",[a._v("locate")]),a._v("支持正则查找。"),s("code",[a._v("--regexp")]),a._v("参数支持基本的正则表达式，"),s("code",[a._v("--regex")]),a._v("参数支持扩展的正则表达式。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("locate")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--regex")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'bin/(bz|gz|zip)'")]),a._v("\n")])])]),s("h2",{attrs:{id:"find"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#find"}},[a._v("#")]),a._v(" find")]),a._v(" "),s("p",[s("code",[a._v("locate")]),a._v("程序只能依据文件名来查找文件，而"),s("code",[a._v("find")]),a._v("程序能基于各种各样的属性，搜索一个给定目录（以及它的子目录），来查找文件。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 输出当前目录的所有子目录和文件（含子目录）")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示当前目录的文件总数")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wc")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 当前目录的子目录总数")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wc")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 当前目录的文件总数（不含子目录）")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wc")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 当前目录的文件名匹配“*.JPG”且大于1M的文件总数")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"\\*.JPG"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-size")]),a._v(" +1M "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wc")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v("\n")])])]),s("p",[s("code",[a._v("-type")]),a._v("参数支持的文件类型。")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("b")]),a._v("\t块设备文件")]),a._v(" "),s("li",[s("code",[a._v("c")]),a._v("\t字符设备文件")]),a._v(" "),s("li",[s("code",[a._v("d")]),a._v("\t目录")]),a._v(" "),s("li",[s("code",[a._v("f")]),a._v("\t普通文件")]),a._v(" "),s("li",[s("code",[a._v("l")]),a._v("\t符号链接")])]),a._v(" "),s("p",[s("code",[a._v("-size")]),a._v("参数支持的文件大小类型。")]),a._v(" "),s("ul",[s("li",[a._v("b\t512 个字节块。如果没有指定单位，则这是默认值。")]),a._v(" "),s("li",[a._v("c\t字节")]),a._v(" "),s("li",[a._v("w\t两个字节的字")]),a._v(" "),s("li",[a._v("k\t千字节")]),a._v(" "),s("li",[a._v("M\t兆字节")]),a._v(" "),s("li",[a._v("G\t千兆字节")])]),a._v(" "),s("p",[s("code",[a._v("find")]),a._v("程序支持的查询参数。")]),a._v(" "),s("ul",[s("li",[a._v("-cmin n\t匹配的文件和目录的内容或属性最后修改时间正好在 n 分钟之前。 指定少于 n 分钟之前，使用 -n，指定多于 n 分钟之前，使用 +n。")]),a._v(" "),s("li",[a._v("-cnewer file\t匹配的文件和目录的内容或属性最后修改时间早于那些文件。")]),a._v(" "),s("li",[a._v("-ctime n\t匹配的文件和目录的内容和属性最后修改时间在 n*24小时之前。")]),a._v(" "),s("li",[a._v("-empty\t匹配空文件和目录。")]),a._v(" "),s("li",[a._v("-group name\t匹配的文件和目录属于一个组。组可以用组名或组 ID 来表示。")]),a._v(" "),s("li",[a._v("-iname pattern\t就像-name 测试条件，但是不区分大小写。")]),a._v(" "),s("li",[a._v("-inum n\t匹配的文件的 inode 号是 n。这对于找到某个特殊 inode 的所有硬链接很有帮助。")]),a._v(" "),s("li",[a._v("-mmin n\t匹配的文件或目录的内容被修改于 n 分钟之前。")]),a._v(" "),s("li",[a._v("-mtime n\t匹配的文件或目录的内容被修改于 n*24小时之前。")]),a._v(" "),s("li",[a._v("-name pattern\t用指定的通配符模式匹配的文件和目录。")]),a._v(" "),s("li",[a._v("-newer file\t匹配的文件和目录的内容早于指定的文件。当编写 shell 脚本，做文件备份时，非常有帮助。 每次你制作一个备份，更新文件（比如说日志），然后使用 find 命令来决定自从上次更新，哪一个文件已经更改了。")]),a._v(" "),s("li",[a._v("-nouser\t匹配的文件和目录不属于一个有效用户。这可以用来查找 属于删除帐户的文件或监测攻击行为。")]),a._v(" "),s("li",[a._v("-nogroup\t匹配的文件和目录不属于一个有效的组。")]),a._v(" "),s("li",[a._v("-perm mode\t匹配的文件和目录的权限已经设置为指定的 mode。mode 可以用 八进制或符号表示法。")]),a._v(" "),s("li",[a._v("-samefile name\t相似于-inum 测试条件。匹配和文件 name 享有同样 inode 号的文件。")]),a._v(" "),s("li",[a._v("-size n\t匹配的文件大小为 n。")]),a._v(" "),s("li",[a._v("-type c\t匹配的文件类型是 c。")]),a._v(" "),s("li",[a._v("-user name\t匹配的文件或目录属于某个用户。这个用户可以通过用户名或用户 ID 来表示。")]),a._v(" "),s("li",[a._v("-depth\t指导 find 程序先处理目录中的文件，再处理目录自身。当指定-delete 行为时，会自动 应用这个选项。")]),a._v(" "),s("li",[a._v("-maxdepth levels\t当执行测试条件和行为的时候，设置 find 程序陷入目录树的最大级别数")]),a._v(" "),s("li",[a._v("-mindepth levels\t在应用测试条件和行为之前，设置 find 程序陷入目录数的最小级别数。")]),a._v(" "),s("li",[a._v("-mount\t指导 find 程序不要搜索挂载到其它文件系统上的目录。")]),a._v(" "),s("li",[a._v("-regex 指定正则表达式")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 找出包括空格或其它不规范字符的文件名或路径名")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-regex")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'.*[^-\\_./0-9a-zA-Z].*'")]),a._v("\n")])])]),s("p",[s("code",[a._v("find")]),a._v("程序还支持逻辑操作符。")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("-and")]),a._v("\t如果操作符两边的测试条件都是真，则匹配。可以简写为 -a。 注意若没有使用操作符，则默认使用 -and。")]),a._v(" "),s("li",[s("code",[a._v("-or")]),a._v("\t若操作符两边的任一个测试条件为真，则匹配。可以简写为 -o。")]),a._v(" "),s("li",[s("code",[a._v("-not")]),a._v("\t若操作符后面的测试条件是真，则匹配。可以简写为一个感叹号（!）。")]),a._v(" "),s("li",[s("code",[a._v("()")]),a._v("\t把测试条件和操作符组合起来形成更大的表达式。这用来控制逻辑计算的优先级。注意 因为圆括号字符对于 shell 来说有特殊含义，所以在命令行中使用它们的时候，它们必须 用引号引起来，才能作为实参传递给 find 命令。通常反斜杠字符被用来转义圆括号字符。")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或关系")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" expression "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-or")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" expression "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 找出不是600权限的文件，或者不是700权限的目录")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" ~ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-not")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v(" 0600 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-or")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" d "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-not")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v(" 0700 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[s("code",[a._v("find")]),a._v("程序的逻辑表达式，具有“短路运算”的特点，即对于"),s("code",[a._v("expr1 -operator expr2")]),a._v("这个表达式，"),s("code",[a._v("expr2")]),a._v("不一定执行。这是为了提高运行速度。")]),a._v(" "),s("ul",[s("li",[a._v("expr1 为真，且操作符为"),s("code",[a._v("-and")]),a._v("，expr2 总是执行")]),a._v(" "),s("li",[a._v("expr1 为假，且操作符为"),s("code",[a._v("-and")]),a._v("，expr2 从不执行")]),a._v(" "),s("li",[a._v("expr1 为真，且操作符为"),s("code",[a._v("-or")]),a._v("，expr2 从不执行")]),a._v(" "),s("li",[a._v("expr1 为假，且操作符为"),s("code",[a._v("-or")]),a._v("，expr2 总是执行")])]),a._v(" "),s("p",[a._v("为了方便执行一些常见操作，"),s("code",[a._v("find")]),a._v("程序定义了一些预定义操作。")]),a._v(" "),s("ul",[s("li",[a._v("-delete\t删除当前匹配的文件。")]),a._v(" "),s("li",[a._v("-ls\t对匹配的文件执行等同的 ls -dils 命令。并将结果发送到标准输出。")]),a._v(" "),s("li",[a._v("-print\t把匹配文件的全路径名输送到标准输出。如果没有指定其它操作，这是 默认操作。")]),a._v(" "),s("li",[a._v("-quit\t一旦找到一个匹配，退出。")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 找到匹配的文件，并显示在标准输出")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -print 是默认操作，可以省略")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-print")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除后缀名为BAK的文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 执行 delete 操作前，最好先执行 print 操作，确认要删除哪些文件")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'*.BAK'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-delete")]),a._v("\n")])])]),s("p",[a._v("预定义操作可以与逻辑表达式，结合使用。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" ~ "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-and")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'*.BAK'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-and")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-print")]),a._v("\n")])])]),s("p",[a._v("除了预定义操作以外，用户还可以使用"),s("code",[a._v("-exec")]),a._v("参数自定义操作。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("上面的命令中，"),s("code",[a._v("command")]),a._v("是一个命令行命令，"),s("code",[a._v("{}")]),a._v("用来指代当前路径，分号表示命令结束。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 预定义的 -delete 操作，等同于下面的操作")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{}'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("';'")]),a._v("\n")])])]),s("p",[s("code",[a._v("-exec")]),a._v("使用时，每次找到一个匹配的文件，会启动一个新的指定命令的实例。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" ~ "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'foo*'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{}'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("';'")]),a._v("\n")])])]),s("p",[a._v("执行上面的命令，"),s("code",[a._v("ls")]),a._v("程序可能会被调用多次。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" file1\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" file2\n")])])]),s("p",[a._v("如果想改成"),s("code",[a._v("ls")]),a._v("程序只调用一次，要把"),s("code",[a._v("find")]),a._v("命令里面的分号，改成加号。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" file1 file2\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 相当于")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" ~ "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'foo*'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{}'")]),a._v(" +\n")])])]),s("h2",{attrs:{id:"xargs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xargs"}},[a._v("#")]),a._v(" xargs")]),a._v(" "),s("p",[s("code",[a._v("xargs")]),a._v("命令从标准输入接受输入，并把输入转换为一个特定命令的参数列表。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" ~ "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'foo\\*'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-print")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("xargs")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);