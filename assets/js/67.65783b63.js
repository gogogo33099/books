(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{345:function(t,s,a){t.exports=a.p+"assets/img/ch5-token-bucket.e7286367.png"},668:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_5-6-ratelimit-服务流量限制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-ratelimit-服务流量限制"}},[t._v("#")]),t._v(" 5.6 Ratelimit 服务流量限制")]),t._v(" "),s("p",[t._v("计算机程序可依据其瓶颈分为磁盘 IO 瓶颈型，CPU 计算瓶颈型，网络带宽瓶颈型，分布式场景下有时候也会外部系统而导致自身瓶颈。")]),t._v(" "),s("p",[t._v("Web 系统打交道最多的是网络，无论是接收，解析用户请求，访问存储，还是把响应数据返回给用户，都是要走网络的。在没有 "),s("code",[t._v("epoll/kqueue")]),t._v(" 之类的系统提供的 IO 多路复用接口之前，多个核心的现代计算机最头痛的是 C10k 问题，C10k 问题会导致计算机没有办法充分利用 CPU 来处理更多的用户连接，进而没有办法通过优化程序提升 CPU 利用率来处理更多的请求。")]),t._v(" "),s("p",[t._v("自从 Linux 实现了 "),s("code",[t._v("epoll")]),t._v("，FreeBSD 实现了 "),s("code",[t._v("kqueue")]),t._v("，这个问题基本解决了，我们可以借助内核提供的 API 轻松解决当年的 C10k 问题，也就是说如今如果你的程序主要是和网络打交道，那么瓶颈一定在用户程序而不在操作系统内核。")]),t._v(" "),s("p",[t._v("随着时代的发展，编程语言对这些系统调用又进一步进行了封装，如今做应用层开发，几乎不会在程序中看到 "),s("code",[t._v("epoll")]),t._v(" 之类的字眼，大多数时候我们就只要聚焦在业务逻辑上就好。Go 的 net 库针对不同平台封装了不同的 syscall API，"),s("code",[t._v("http")]),t._v(" 库又是构建在 "),s("code",[t._v("net")]),t._v(" 库之上，所以在 Go 语言中我们可以借助标准库，很轻松地写出高性能的 "),s("code",[t._v("http")]),t._v(" 服务，下面是一个简单的 "),s("code",[t._v("hello world")]),t._v(" 服务的代码：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"net/http"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayhello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wr http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ResponseWriter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\twr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tio"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\thttp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HandleFunc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sayhello"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\terr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ListenAndServe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":9090"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ListenAndServe:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("我们需要衡量一下这个 Web 服务的吞吐量，再具体一些，就是接口的 QPS。借助 wrk，在家用电脑 Macbook Pro 上对这个 "),s("code",[t._v("hello world")]),t._v(" 服务进行基准测试，Mac 的硬件情况如下：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("CPU: Intel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" i5-5257U CPU @ "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(".70GHz\nCore: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\nThreads: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n\nGraphics/Displays:\n\t  Chipset Model: Intel Iris Graphics "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6100")]),t._v("\n\t\t  Resolution: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2560")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1600")]),t._v(" Retina\n\tMemory Slots:\n\t\t  Size: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" GB\n\t\t  Speed: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1867")]),t._v(" MHz\n\t\t  Size: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" GB\n\t\t  Speed: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1867")]),t._v(" MHz\nStorage:\n\t\t  Size: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("250.14")]),t._v(" GB "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("250,140")]),t._v(",319,744 bytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t  Media Name: APPLE SSD SM0256G Media\n\t\t  Size: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("250.14")]),t._v(" GB "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("250,140")]),t._v(",319,744 bytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t  Medium Type: SSD\n")])])]),s("p",[t._v("测试结果：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("~ ❯❯❯ wrk "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" 10s "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t10")]),t._v(" http://localhost:9090\nRunning 10s "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" @ http://localhost:9090\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" threads and "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" connections\n  Thread Stats   Avg\t  Stdev\t Max   +/- Stdev\n\tLatency   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("339")]),t._v(".99us\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".28ms  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),t._v(".43ms   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("98.29")]),t._v("%\n\tReq/Sec\t "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(".49k   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("656.81")]),t._v("\t "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(".47k\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("73.36")]),t._v("%\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("449588")]),t._v(" requests "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(".10s, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("54")]),t._v(".88MB "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v("\nRequests/sec:  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("44513.22")]),t._v("\nTransfer/sec:\t  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(".43MB\n\n~ ❯❯❯ wrk "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" 10s "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t10")]),t._v(" http://localhost:9090\nRunning 10s "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" @ http://localhost:9090\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" threads and "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" connections\n  Thread Stats   Avg\t  Stdev\t Max   +/- Stdev\n\tLatency   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("334")]),t._v(".76us\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".21ms  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),t._v(".47ms   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("98.27")]),t._v("%\n\tReq/Sec\t "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(".42k   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("633.62")]),t._v("\t "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(".90k\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("71.16")]),t._v("%\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("443582")]),t._v(" requests "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(".10s, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("54")]),t._v(".15MB "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v("\nRequests/sec:  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("43911.68")]),t._v("\nTransfer/sec:\t  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(".36MB\n\n~ ❯❯❯ wrk "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" 10s "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t10")]),t._v(" http://localhost:9090\nRunning 10s "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" @ http://localhost:9090\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" threads and "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" connections\n  Thread Stats   Avg\t  Stdev\t Max   +/- Stdev\n\tLatency   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("379")]),t._v(".26us\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".34ms  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),t._v(".28ms   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("97.62")]),t._v("%\n\tReq/Sec\t "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(".55k   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("591.64")]),t._v("\t "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(".20k\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("76.37")]),t._v("%\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("455710")]),t._v(" requests "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(".10s, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),t._v(".63MB "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v("\nRequests/sec:  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("45118.57")]),t._v("\nTransfer/sec:\t  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(".51MB\n")])])]),s("p",[t._v("多次测试的结果在 4 万左右的 QPS 浮动，响应时间最多也就是 40ms 左右，对于一个 Web 程序来说，这已经是很不错的成绩了，我们只是照抄了别人的示例代码，就完成了一个高性能的 "),s("code",[t._v("hello world")]),t._v(" 服务器，是不是很有成就感？")]),t._v(" "),s("p",[t._v("这还只是家用 PC，线上服务器大多都是 24 核心起，32G 内存 +，CPU 基本都是 Intel i7。所以同样的程序在服务器上运行会得到更好的结果。")]),t._v(" "),s("p",[t._v("这里的 "),s("code",[t._v("hello world")]),t._v(" 服务没有任何业务逻辑。真实环境的程序要复杂得多，有些程序偏网络 IO 瓶颈，例如一些 CDN 服务、Proxy 服务；有些程序偏 CPU/GPU 瓶颈，例如登陆校验服务、图像处理服务；有些程序瓶颈偏磁盘，例如专门的存储系统，数据库。不同的程序瓶颈会体现在不同的地方，这里提到的这些功能单一的服务相对来说还算容易分析。如果碰到业务逻辑复杂代码量巨大的模块，其瓶颈并不是三下五除二可以推测出来的，还是需要从压力测试中得到更为精确的结论。")]),t._v(" "),s("p",[t._v("对于 IO/Network 瓶颈类的程序，其表现是网卡 / 磁盘 IO 会先于 CPU 打满，这种情况即使优化 CPU 的使用也不能提高整个系统的吞吐量，只能提高磁盘的读写速度，增加内存大小，提升网卡的带宽来提升整体性能。而 CPU 瓶颈类的程序，则是在存储和网卡未打满之前 CPU 占用率先到达 100%，CPU 忙于各种计算任务，IO 设备相对则较闲。")]),t._v(" "),s("p",[t._v("无论哪种类型的服务，在资源使用到极限的时候都会导致请求堆积，超时，系统 hang 死，最终伤害到终端用户。对于分布式的 Web 服务来说，瓶颈还不一定总在系统内部，也有可能在外部。非计算密集型的系统往往会在关系型数据库环节失守，而这时候 Web 模块本身还远远未达到瓶颈。")]),t._v(" "),s("p",[t._v("不管我们的服务瓶颈在哪里，最终要做的事情都是一样的，那就是流量限制。")]),t._v(" "),s("h2",{attrs:{id:"_5-6-1-常见的流量限制手段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-1-常见的流量限制手段"}},[t._v("#")]),t._v(" 5.6.1 常见的流量限制手段")]),t._v(" "),s("p",[t._v("流量限制的手段有很多，最常见的：漏桶、令牌桶两种：")]),t._v(" "),s("ol",[s("li",[t._v("漏桶是指我们有一个一直装满了水的桶，每过固定的一段时间即向外漏一滴水。如果你接到了这滴水，那么你就可以继续服务请求，如果没有接到，那么就需要等待下一滴水。")]),t._v(" "),s("li",[t._v("令牌桶则是指匀速向桶中添加令牌，服务请求时需要从桶中获取令牌，令牌的数目可以按照需要消耗的资源进行相应的调整。如果没有令牌，可以选择等待，或者放弃。")])]),t._v(" "),s("p",[t._v("这两种方法看起来很像，不过还是有区别的。漏桶流出的速率固定，而令牌桶只要在桶中有令牌，那就可以拿。也就是说令牌桶是允许一定程度的并发的，比如同一个时刻，有 100 个用户请求，只要令牌桶中有 100 个令牌，那么这 100 个请求全都会放过去。令牌桶在桶中没有令牌的情况下也会退化为漏桶模型。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(345),alt:"token bucket"}})]),t._v(" "),s("p",[s("em",[t._v("图 5-12 令牌桶")])]),t._v(" "),s("p",[t._v("实际应用中令牌桶应用较为广泛，开源界流行的限流器大多数都是基于令牌桶思想的。并且在此基础上进行了一定程度的扩充，比如 "),s("code",[t._v("github.com/juju/ratelimit")]),t._v(" 提供了几种不同特色的令牌桶填充方式：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewBucket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fillInterval time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Duration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" capacity "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Bucket\n")])])]),s("p",[t._v("默认的令牌桶，"),s("code",[t._v("fillInterval")]),t._v(" 指每过多长时间向桶里放一个令牌，"),s("code",[t._v("capacity")]),t._v(" 是桶的容量，超过桶容量的部分会被直接丢弃。桶初始是满的。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewBucketWithQuantum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fillInterval time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Duration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" capacity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quantum "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Bucket\n")])])]),s("p",[t._v("和普通的 "),s("code",[t._v("NewBucket()")]),t._v(" 的区别是，每次向桶中放令牌时，是放 "),s("code",[t._v("quantum")]),t._v(" 个令牌，而不是一个令牌。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewBucketWithRate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rate "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" capacity "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Bucket\n")])])]),s("p",[t._v("这个就有点特殊了，会按照提供的比例，每秒钟填充令牌数。例如 "),s("code",[t._v("capacity")]),t._v(" 是 100，而 "),s("code",[t._v("rate")]),t._v(" 是 0.1，那么每秒会填充 10 个令牌。")]),t._v(" "),s("p",[t._v("从桶中获取令牌也提供了几个 API：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Bucket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Take")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Duration "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Bucket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("TakeAvailable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Bucket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("TakeMaxDuration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" maxWait time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Duration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\ttime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Duration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Bucket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Wait")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Bucket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WaitMaxDuration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" maxWait time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Duration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("名称和功能都比较直观，这里就不再赘述了。相比于开源界更为有名的 Google 的 Java 工具库 Guava 中提供的 ratelimiter，这个库不支持令牌桶预热，且无法修改初始的令牌容量，所以可能个别极端情况下的需求无法满足。但在明白令牌桶的基本原理之后，如果没办法满足需求，相信你也可以很快对其进行修改并支持自己的业务场景。")]),t._v(" "),s("h2",{attrs:{id:"_5-6-2-原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-2-原理"}},[t._v("#")]),t._v(" 5.6.2 原理")]),t._v(" "),s("p",[t._v("从功能上来看，令牌桶模型就是对全局计数的加减法操作过程，但使用计数需要我们自己加读写锁，有小小的思想负担。如果我们对 Go 语言已经比较熟悉的话，很容易想到可以用 buffered channel 来完成简单的加令牌取令牌操作：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tokenBucket "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("chan")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" capacity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("每过一段时间向 "),s("code",[t._v("tokenBucket")]),t._v(" 中添加 "),s("code",[t._v("token")]),t._v("，如果 "),s("code",[t._v("bucket")]),t._v(" 已经满了，那么直接放弃：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("fillToken "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tticker "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewTicker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fillInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v("ticker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" tokenBucket "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"current token cnt:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tokenBucket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("把代码组合起来：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fillInterval "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Millisecond "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" capacity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tokenBucket "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("chan")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" capacity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\tfillToken "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tticker "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewTicker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fillInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v("ticker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" tokenBucket "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"current token cnt:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tokenBucket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fillToken")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ttime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Hour"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("看看运行结果：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("current token cnt: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("98")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v("-06-16 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":17:50.234556981 +0800 CST "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("m")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("+0.981524018\ncurrent token cnt: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v("-06-16 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":17:50.243575354 +0800 CST "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("m")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("+0.990542391\ncurrent token cnt: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v("-06-16 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":17:50.254628067 +0800 CST "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("m")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("+1.001595104\ncurrent token cnt: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v("-06-16 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":17:50.264537143 +0800 CST "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("m")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("+1.011504180\ncurrent token cnt: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v("-06-16 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":17:50.273613018 +0800 CST "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("m")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("+1.020580055\ncurrent token cnt: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v("-06-16 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":17:50.2844406 +0800 CST "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("m")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("+1.031407637\ncurrent token cnt: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v("-06-16 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":17:50.294528695 +0800 CST "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("m")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("+1.041495732\ncurrent token cnt: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v("-06-16 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":17:50.304550145 +0800 CST "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("m")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("+1.051517182\ncurrent token cnt: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v("-06-16 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":17:50.313970334 +0800 CST "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("m")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("+1.060937371\n")])])]),s("p",[t._v("在 1s 钟的时候刚好填满 100 个，没有太大的偏差。不过这里可以看到，Go 的定时器存在大约 0.001s 的误差，所以如果令牌桶大小在 1000 以上的填充可能会有一定的误差。对于一般的服务来说，这一点误差无关紧要。")]),t._v(" "),s("p",[t._v("上面的令牌桶的取令牌操作实现起来也比较简单，简化问题，我们这里只取一个令牌：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("TakeAvailable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("block "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" takenResult "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" block "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v("tokenBucket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\ttakenResult "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v("tokenBucket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\ttakenResult "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\ttakenResult "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" takenResult\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("一些公司自己造的限流的轮子就是用上面这种方式来实现的，不过如果开源版 ratelimit 也如此的话，那我们也没什么可说的了。现实并不是这样的。")]),t._v(" "),s("p",[t._v("我们来思考一下，令牌桶每隔一段固定的时间向桶中放令牌，如果我们记下上一次放令牌的时间为 t1，和当时的令牌数 k1，放令牌的时间间隔为 ti，每次向令牌桶中放 x 个令牌，令牌桶容量为 cap。现在如果有人来调用 "),s("code",[t._v("TakeAvailable")]),t._v(" 来取 n 个令牌，我们将这个时刻记为 t2。在 t2 时刻，令牌桶中理论上应该有多少令牌呢？伪代码如下：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("cur "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" k1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" x\ncur "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("cap")]),t._v(" ? "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("cap")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cur\n")])])]),s("p",[t._v("我们用两个时间点的时间差，再结合其它的参数，理论上在取令牌之前就完全可以知道桶里有多少令牌了。那劳心费力地像本小节前面向 channel 里填充 token 的操作，理论上是没有必要的。只要在每次 "),s("code",[t._v("Take")]),t._v(" 的时候，再对令牌桶中的 token 数进行简单计算，就可以得到正确的令牌数。是不是很像 "),s("code",[t._v("惰性求值")]),t._v(" 的感觉？")]),t._v(" "),s("p",[t._v("在得到正确的令牌数之后，再进行实际的 "),s("code",[t._v("Take")]),t._v(" 操作就好，这个 "),s("code",[t._v("Take")]),t._v(" 操作只需要对令牌数进行简单的减法即可，记得加锁以保证并发安全。"),s("code",[t._v("github.com/juju/ratelimit")]),t._v(" 这个库就是这样做的。")]),t._v(" "),s("h2",{attrs:{id:"_5-6-3-服务瓶颈和-qos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-3-服务瓶颈和-qos"}},[t._v("#")]),t._v(" 5.6.3 服务瓶颈和 QoS")]),t._v(" "),s("p",[t._v("前面我们说了很多 CPU 瓶颈、IO 瓶颈之类的概念，这种性能瓶颈从大多数公司都有的监控系统中可以比较快速地定位出来，如果一个系统遇到了性能问题，那监控图的反应一般都是最快的。")]),t._v(" "),s("p",[t._v("虽然性能指标很重要，但对用户提供服务时还应考虑服务整体的 QoS。QoS 全称是 Quality of Service，顾名思义是服务质量。QoS 包含有可用性、吞吐量、时延、时延变化和丢失等指标。一般来讲我们可以通过优化系统，来提高 Web 服务的 CPU 利用率，从而提高整个系统的吞吐量。但吞吐量提高的同时，用户体验是有可能变差的。用户角度比较敏感的除了可用性之外，还有时延。虽然你的系统吞吐量高，但半天刷不开页面，想必会造成大量的用户流失。所以在大公司的 Web 服务性能指标中，除了平均响应时延之外，还会把响应时间的 95 分位，99 分位也拿出来作为性能标准。平均响应在提高 CPU 利用率没受到太大影响时，可能 95 分位、99 分位的响应时间大幅度攀升了，那么这时候就要考虑提高这些 CPU 利用率所付出的代价是否值得了。")]),t._v(" "),s("p",[t._v("在线系统的机器一般都会保持 CPU 有一定的余裕。")])])}),[],!1,null,null,null);s.default=e.exports}}]);