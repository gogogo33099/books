(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{1002:function(t,a,s){"use strict";s.r(a);var e=s(14),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_2-3-在-linux-上安装-go"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-在-linux-上安装-go"}},[t._v("#")]),t._v(" 2.3 在 Linux 上安装 Go")]),t._v(" "),a("p",[t._v("如果你能够自己下载并编译 Go 的源代码的话,对你来说是非常有教育意义的，你可以根据这个页面找到安装指南和下载地址："),a("a",{attrs:{href:"http://golang.org/doc/install",target:"_blank",rel:"noopener noreferrer"}},[t._v("Download the Go distribution"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("我们接下来也会带你一步步地完成安装过程。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("设置 Go 环境变量")]),t._v(" "),a("p",[t._v("我们在 Linux 系统下一般通过文件 "),a("code",[t._v("$HOME/.bashrc")]),t._v(" 配置自定义环境变量，根据不同的发行版也可能是文件 "),a("code",[t._v("$HOME/.profile")]),t._v("，然后使用 gedit 或 vi 来编辑文件内容。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" export GOROOT=$HOME/go\n")])])]),a("p",[t._v("为了确保相关文件在文件系统的任何地方都能被调用，你还需要添加以下内容：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" export PATH=$PATH:$GOROOT/bin\n")])])]),a("p",[t._v("在开发 Go 项目时，你还需要一个环境变量来保存你的工作目录。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" export GOPATH=$HOME/Applications/Go\n")])])]),a("p",[a("code",[t._v("$GOPATH")]),t._v(" 可以包含多个工作目录，取决于你的个人情况。如果你设置了多个工作目录，那么当你在之后使用 "),a("code",[t._v("go get")]),t._v("（远程包安装命令）时远程包将会被安装在第一个目录下。")]),t._v(" "),a("p",[t._v("在完成这些设置后，你需要在终端输入指令 "),a("code",[t._v("source .bashrc")]),t._v(" 以使这些环境变量生效。然后重启终端，输入 "),a("code",[t._v("go env")]),t._v(" 和 "),a("code",[t._v("env")]),t._v(" 来检查环境变量是否设置正确。")])]),t._v(" "),a("li",[a("p",[t._v("安装 C 工具")]),t._v(" "),a("p",[t._v("Go 的工具链是用 C 语言编写的，因此在安装 Go 之前你需要先安装相关的 C 工具。如果你使用的是 Ubuntu 的话，你可以在终端输入以下指令（ "),a("strong",[t._v("译者注：由于网络环境的特殊性，你可能需要将每个工具分开安装")]),t._v(" ）。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" sudo apt-get install bison ed gawk gcc libc6-dev make\n")])])]),a("p",[t._v("你可以在其它发行版上使用 RPM 之类的工具。")])]),t._v(" "),a("li",[a("p",[t._v("获取 Go 源代码")]),t._v(" "),a("p",[t._v("从 "),a("a",{attrs:{href:"https://golang.org/dl/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方页面"),a("OutboundLink")],1),t._v(" 或 "),a("a",{attrs:{href:"http://www.golangtc.com/download",target:"_blank",rel:"noopener noreferrer"}},[t._v("国内镜像"),a("OutboundLink")],1),t._v(" 下载 Go 的源码包到你的计算机上，然后将解压后的目录 "),a("code",[t._v("go")]),t._v(" 通过命令移动到 "),a("code",[t._v("$GOROOT")]),t._v(" 所指向的位置。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" wget https://storage.googleapis.com/golang/go<VERSION>.src.tar.gz\n tar -zxvf go<VERSION>.src.tar.gz\n sudo mv go $GOROOT\n")])])])]),t._v(" "),a("li",[a("p",[t._v("构建 Go")]),t._v(" "),a("p",[t._v("在终端使用以下指令来进行编译工作。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" cd $GOROOT/src\n ./all.bash\n")])])]),a("p",[a("strong",[t._v("编译注意事项")])]),t._v(" "),a("p",[t._v("编译时如果出现如下报错：")]),t._v(" "),a("p",[a("img",{attrs:{src:s(436),alt:""}})]),t._v(" "),a("p",[t._v("可能是因为 "),a("code",[t._v("$GOROOT_BOOTSTRAP")]),t._v(" 变量没有设置。这个目录在安装 Go 1.5 版本及之后的版本时需要设置。")]),t._v(" "),a("p",[t._v("由于在 1.4 版本后，Go 编译器实现了自举，即通过 1.4 版本来编译安装之后版本的编译器。如果不设置该环境变量的话，会产生这样一个错误 "),a("code",[t._v("Set $GOROOT_BOOTSTRAP to a working Go tree >= Go 1.4.")]),t._v(" 。")]),t._v(" "),a("p",[t._v("设置 "),a("code",[t._v("$GOROOT_BOOTSTRAP")]),t._v(" 变量：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" export GOROOT_BOOTSTRAP=$HOME/go1.4\n")])])]),a("p",[t._v("设置完成后，下载 1.4 版本的源码到该目录：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" git clone https://github.com/golang/go.git $HOME/go1.4\n git checkout -b release-branch.go1.4 origin/release-branch.go1.4\n")])])]),a("p",[t._v("进入 1.4 的文件夹后，进行编译：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" cd $HOME/go1.4/src\n ./make.bash\n")])])]),a("p",[t._v("1.4 编译安装好之后，进入 "),a("code",[t._v("$GOROOT")]),t._v(" 文件夹，真正开始编译安装 Go：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" cd $HOME/go/src\n ./all.bash\n")])])]),a("p",[t._v("在完成编译之后（通常在 1 分钟以内，如果你在 B 型树莓派上编译，一般需要 1 个小时），你会在终端看到如下信息被打印：")]),t._v(" "),a("p",[a("img",{attrs:{src:s(437),alt:""}})]),t._v(" "),a("center",[t._v("图 2.3 完成编译后在终端打印的信息")]),t._v(" "),a("p",[a("strong",[t._v("注意事项")])]),t._v(" "),a("p",[t._v("在测试 "),a("code",[t._v("net/http")]),t._v(" 包时有一个测试会尝试连接 "),a("code",[t._v("google.com")]),t._v("，你可能会看到如下所示的一个无厘头的错误报告：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" ‘make[2]: Leaving directory `/localusr/go/src/pkg/net’\n")])])]),a("p",[t._v("如果你正在使用一个带有防火墙的机器，我建议你可以在编译过程中暂时关闭防火墙，以避免不必要的错误。")]),t._v(" "),a("p",[t._v("解决这个问题的另一个办法是通过设置环境变量 "),a("code",[t._v("$DISABLE_NET_TESTS")]),t._v(" 来告诉构建工具忽略 "),a("code",[t._v("net/http")]),t._v(" 包的相关测试：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" export DISABLE_NET_TESTS=1\n")])])]),a("p",[t._v("如果你完全不想运行包的测试，你可以直接运行 "),a("code",[t._v("./make.bash")]),t._v(" 来进行单纯的构建过程。")])],1),t._v(" "),a("li",[a("p",[t._v("测试安装")]),t._v(" "),a("p",[t._v("使用你最喜爱的编辑器来输入以下内容，并保存为文件名 "),a("code",[t._v("hello_world1.go")]),t._v("。")]),t._v(" "),a("p",[t._v("示例 2.1 "),a("a",{attrs:{href:"examples/chapter_2/hello_world1.go"}},[t._v("hello_world1.go")])]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("切换相关目录到下，然后执行指令 "),a("code",[t._v("go run hello_world1.go")]),t._v("，将会打印信息："),a("code",[t._v("Hello, world")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("验证安装版本")]),t._v(" "),a("p",[t._v("你可以通过在终端输入指令 "),a("code",[t._v("go version")]),t._v(" 来打印 Go 的版本信息。")]),t._v(" "),a("p",[t._v("如果你想要通过 Go 代码在运行时检测版本，可以通过以下例子实现。")]),t._v(" "),a("p",[t._v("示例 2.2 "),a("a",{attrs:{href:"examples/chapter_2/version.go"}},[t._v("version.go")])]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runtime"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%s"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" runtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这段代码将会输出 "),a("code",[t._v("go1.4.2")]),t._v(" 或类似字符串。")])]),t._v(" "),a("li",[a("p",[t._v("更新版本")]),t._v(" "),a("p",[t._v("你可以在 "),a("a",{attrs:{href:"http://golang.org/doc/devel/release.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("发布历史"),a("OutboundLink")],1),t._v(" 页面查看到最新的稳定版。")]),t._v(" "),a("p",[t._v("当前最新的稳定版 Go 1 系列于 2012 年 3 月 28 日发布。")]),t._v(" "),a("p",[t._v("Go 的源代码有以下三个分支：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" - Go release：最新稳定版，实际开发最佳选择\n - Go weekly：包含最近更新的版本，一般每周更新一次\n - Go tip：永远保持最新的版本，相当于内测版\n")])])]),a("p",[t._v("当你在使用不同的版本时，注意官方博客发布的信息，因为你所查阅的文档可能和你正在使用的版本不相符。")])])]),t._v(" "),a("h2",{attrs:{id:"链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链接"}},[t._v("#")]),t._v(" 链接")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/the-way-to-go/directory.html"}},[t._v("目录")])],1),t._v(" "),a("li",[t._v("上一节："),a("RouterLink",{attrs:{to:"/the-way-to-go/02.2.html"}},[t._v("Go 环境变量")])],1),t._v(" "),a("li",[t._v("下一节："),a("RouterLink",{attrs:{to:"/the-way-to-go/02.4.html"}},[t._v("在 Mac OS X 上安装 Go")])],1)])])}),[],!1,null,null,null);a.default=n.exports},436:function(t,a,s){t.exports=s.p+"assets/img/2.3.allbasherror.f9f6ee0b.png"},437:function(t,a,s){t.exports=s.p+"assets/img/2.3.allbash.f923fb1a.png"}}]);