(window.webpackJsonp=window.webpackJsonp||[]).push([[259],{679:function(e,t,o){"use strict";o.r(t);var r=o(14),n=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"附录a-原文勘误"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#附录a-原文勘误"}},[e._v("#")]),e._v(" 附录A："),t("a",{attrs:{href:"http://www.gopl.io/errata.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("原文勘误"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("strong",[e._v("p.9, ¶2:")]),e._v(' for "can compared", read "can be compared". (Thanks to Antonio Macías Ojeda, 2015-10-22. Corrected in the second printing.)')]),e._v(" "),t("p",[t("strong",[e._v("p.13:")]),e._v(" As printed, the "),t("code",[e._v("gopl.io/ch1/lissajous")]),e._v(" program is deterministic, not random.  We've added the statement below to the downloadable program so that it prints a pseudo-random image each time it is run. (Thanks to Randall McPherson, 2015-10-19.)")]),e._v(" "),t("p",[t("code",[e._v("rand.Seed(time.Now().UTC().UnixNano())")])]),e._v(" "),t("p",[t("strong",[e._v("p.15, ¶2:")]),e._v(' For "inner loop", read "outer loop". (Thanks to Ralph Corderoy, 2015-11-28. Corrected in the third printing.)')]),e._v(" "),t("p",[t("strong",[e._v("p.19, ¶2:")]),e._v(' For "Go\'s libraries makes", read "Go\'s library makes". (Thanks to Victor Farazdagi, 2015-11-30. Corrected in the third printing.)')]),e._v(" "),t("p",[t("strong",[e._v("p.40, ¶4:")]),e._v(' For "value of the underlying type", read "value of an unnamed type with the same underlying type". (Thanks to Carlos Romero Brox, 2015-12-19.)')]),e._v(" "),t("p",[t("strong",[e._v("p.40, ¶1:")]),e._v(" The paragraph should end with a period, not a comma. (Thanks to Victor Farazdagi, 2015-11-30. Corrected in the third printing.)")]),e._v(" "),t("p",[t("strong",[e._v("p.43, ¶3:")]),e._v(" Import declarations are explained in §10.4, not §10.3. (Thanks to Peter Jurgensen, 2015-11-21. Corrected in the third printing.)")]),e._v(" "),t("p",[t("strong",[e._v("p.48:")]),e._v(" "),t("code",[e._v("f.ReadByte()")]),e._v(" serves as an example of a reference to f, but "),t("code",[e._v("*os.File")]),e._v(' has no such method. For "ReadByte", read "Stat", four times. (Thanks to Peter Olsen, 2016-01-06. Corrected in the third printing.)')]),e._v(" "),t("p",[t("strong",[e._v("p.52, ¶2:")]),e._v(' for "an synonym", read "a synonym", twice. (Corrected in the second printing.)')]),e._v(" "),t("p",[t("strong",[e._v("p.52, ¶9:")]),e._v(' for "The integer arithmetic operators", read "The arithmetic operators". (Thanks to Yoshiki Shibata, 2015-12-20.)')]),e._v(" "),t("p",[t("strong",[e._v("p.68:")]),e._v(" the table of UTF-8 encodings is missing a bit from each first byte. The corrected table is shown below.  (Thanks to Akshay Kumar, 2015-11-02. Corrected in the second printing.)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("0xxxxxxx                             runes 0−127     (ASCII)\n110xxxxx 10xxxxxx                    128−2047        (values <128 unused)\n1110xxxx 10xxxxxx 10xxxxxx           2048−65535      (values <2048 unused)\n11110xxx 10xxxxxx 10xxxxxx 10xxxxxx  65536−0x10ffff  (other values unused)\n")])])]),t("p",[t("strong",[e._v("p.73, ¶1:")]),e._v(' For "a exercise", read "an exercise". (Thanks to vrajmohan, 2015-12-28.)')]),e._v(" "),t("p",[t("strong",[e._v("p.74:")]),e._v(" the comment in "),t("code",[e._v("gopl.io/ch3/printints")]),e._v(" should say "),t("code",[e._v("fmt.Sprint")]),e._v(", not "),t("code",[e._v("fmt.Sprintf")]),e._v(". (Corrected in the second printing.)")]),e._v(" "),t("p",[t("strong",[e._v("p.75, ¶4:")]),e._v(' for "%u", read "%o". (Thanks to William Hannish, 2015-12-21.)')]),e._v(" "),t("p",[t("strong",[e._v("p.76:")]),e._v(" the comment "),t("code",[e._v('// "time.Duration 5m0s')]),e._v(" should have a closing double-quotation mark. (Corrected in the second printing.)")]),e._v(" "),t("p",[t("strong",[e._v("p.79, ¶4:")]),e._v(' "When an untyped constant is assigned to a variable, as in the first statement below, or\nappears on the right-hand side of a variable declaration with an explicit type, as in the other three statements, ..." has it backwards: the '),t("i",[e._v("first")]),e._v(" statement is a declaration; the other three are assignments. (Thanks to Yoshiki Shibata, 2015-11-09. Corrected in the third printing.)")]),e._v(" "),t("p",[t("strong",[e._v("p.112:")]),e._v(' Exercise 4.11 calls for a "CRUD" (create, read, update, delete) tool for GitHub Issues. Since GitHub does not currently allow Issues to be deleted, for "delete", read "close". (Thanks to Yoshiki Shibata, 2016-01-18.)')]),e._v(" "),t("p",[t("strong",[e._v("p.115:")]),e._v(" The anchor element in "),t("code",[e._v("gopl.io/ch4/issueshtml")]),e._v("'s template is missing a closing "),t("code",[e._v("</a>")]),e._v(" tag. (Thanks to Taj Khattra, 2016-01-19.)")]),e._v(" "),t("p",[t("strong",[e._v("p.132, code display following ¶3:")]),e._v(" the final comment should read: "),t("code",[e._v("// compile error: can't assign func(int, int) int to func(int) int")]),e._v(" (Thanks to Toni Suter, 2015-11-21. Corrected in the third printing.)")]),e._v(" "),t("p",[t("strong",[e._v("p.160, ¶4:")]),e._v(" "),t("code",[e._v('For Get("item"))')]),e._v(", read "),t("code",[e._v('Get("item")')]),e._v(". (Thanks to Yoshiki Shibata, 2016-02-01.)")]),e._v(" "),t("p",[t("strong",[e._v("p.166, ¶2:")]),e._v(' for "way", read "a way". (Corrected in the third printing.)')]),e._v(" "),t("p",[t("strong",[e._v("p.200, TestEval function:")]),e._v(" the format string in the final call to t.Errorf should format test.env with %v, not %s. (Thanks to Mitsuteru Sawa, 2015-12-07. Corrected in the third printing.)")]),e._v(" "),t("p",[t("strong",[e._v("p.222, Exercise 8.1:")]),e._v(" The port numbers for "),t("code",[e._v("London")]),e._v(" and "),t("code",[e._v("Tokyo")]),e._v(" should be swapped in the final command to match the earlier commands. (Thanks to Kiyoshi Kamishima, 2016-01-08.)")]),e._v(" "),t("p",[t("strong",[e._v("p.272, ¶3:")]),e._v(' for "the request body", read "the response body". (Thanks to '),t("a",{attrs:{href:"https://github.com/cch123",target:"_blank",rel:"noopener noreferrer"}},[e._v("曹春晖"),t("OutboundLink")],1),e._v(", 2016-01-19.)")]),e._v(" "),t("p",[t("strong",[e._v("p.288, code display following ¶4:")]),e._v(" In the import declaration, for "),t("code",[e._v('"database/mysql"')]),e._v(", read "),t("code",[e._v('"database/sql"')]),e._v(". (Thanks to Jose Colon Rodriguez, 2016-01-09.)")]),e._v(" "),t("p",[t("strong",[e._v("p.347, Exercise 12.8:")]),e._v(' for "like json.Marshal", read "like json.Unmarshal". (Thanks to '),t("a",{attrs:{href:"https://github.com/chai2010",target:"_blank",rel:"noopener noreferrer"}},[e._v("chai2010"),t("OutboundLink")],1),e._v(", 2016-01-01.)")]),e._v(" "),t("p",[t("strong",[e._v("p.362:")]),e._v(" the "),t("code",[e._v("gopl.io/ch13/bzip")]),e._v(" program does not comply with the "),t("a",{attrs:{href:"https://github.com/golang/proposal/blob/master/design/12416-cgo-pointers.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("proposed rules for passing pointers between Go and C code"),t("OutboundLink")],1),e._v(" because the C function "),t("code",[e._v("bz2compress")]),e._v(" temporarily stores a Go pointer (in) into the Go heap (the "),t("code",[e._v("bz_stream")]),e._v(" variable). The "),t("code",[e._v("bz_stream")]),e._v(" variable should be allocated, and explicitly freed after the call to "),t("code",[e._v("BZ2_bzCompressEnd")]),e._v(", by C functions. (Thanks to Joe Tsai, 2015-11-18. Corrected in the third printing.)")])])}),[],!1,null,null,null);t.default=n.exports}}]);