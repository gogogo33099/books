(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{503:function(a,t,s){"use strict";s.r(t);var e=s(14),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"归档和备份"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#归档和备份"}},[a._v("#")]),a._v(" 归档和备份")]),a._v(" "),t("h2",{attrs:{id:"gzip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gzip"}},[a._v("#")]),a._v(" gzip")]),a._v(" "),t("p",[a._v("gzip 程序用来压缩文件，原文件的压缩版（添加"),t("code",[a._v("gz")]),a._v("后缀名）会替代原文件。gunzip 程序用来还原压缩版本。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("gzip")]),a._v(" foo.txt\n$ gunzip foo.txt.gz\n")])])]),t("p",[t("code",[a._v("gzip")]),a._v("的参数如下。")]),a._v(" "),t("ul",[t("li",[a._v("-c\t把输出写入到标准输出，并且保留原始文件。也有可能用--stdout 和--to-stdout 选项来指定。")]),a._v(" "),t("li",[a._v("-d\t解压缩。正如 gunzip 命令一样。也可以用--decompress 或者--uncompress 选项来指定.")]),a._v(" "),t("li",[a._v("-f\t强制压缩，即使原始文件的压缩文件已经存在了，也要执行。也可以用--force 选项来指定。")]),a._v(" "),t("li",[a._v("-h\t显示用法信息。也可用--help 选项来指定。")]),a._v(" "),t("li",[a._v("-l\t列出每个被压缩文件的压缩数据。也可用--list 选项。")]),a._v(" "),t("li",[a._v("-r\t若命令的一个或多个参数是目录，则递归地压缩目录中的文件。也可用--recursive 选项来指定。")]),a._v(" "),t("li",[a._v("-t\t测试压缩文件的完整性。也可用--test 选项来指定。")]),a._v(" "),t("li",[a._v("-v\t显示压缩过程中的信息。也可用--verbose 选项来指定。")]),a._v(" "),t("li",[a._v("-number\t设置压缩指数。number 是一个在1（最快，最小压缩）到9（最慢，最大压缩）之间的整数。 数值1和9也可以各自用--fast 和--best 选项来表示。默认值是整数6。")])]),a._v(" "),t("p",[a._v("下面是一些例子。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看解压缩后的内容")]),a._v("\n$ gunzip "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" foo.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("less")]),a._v("\n")])])]),t("p",[t("code",[a._v("zcat")]),a._v("程序等同于带有-c 选项的 gunzip 命令。它可以像"),t("code",[a._v("cat")]),a._v("命令那样，用来查看"),t("code",[a._v("gzip")]),a._v("压缩文件。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ zcat foo.txt.gz "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("less")]),a._v("\n")])])]),t("h2",{attrs:{id:"bzip2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bzip2"}},[a._v("#")]),a._v(" bzip2")]),a._v(" "),t("p",[t("code",[a._v("bzip2")]),a._v("程序与"),t("code",[a._v("gzip")]),a._v("程序相似，但是使用了不同的压缩算法，舍弃了压缩速度，实现了更高的压缩级别。在大多数情况下，它的工作模式等同于"),t("code",[a._v("gzip")]),a._v("。 由"),t("code",[a._v("bzip2")]),a._v("压缩的文件，用扩展名"),t("code",[a._v(".bz2")]),a._v("表示。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bzip2")]),a._v(" foo.txt\n$ bunzip2 foo.txt.bz2\n")])])]),t("p",[a._v("gzip程序的所有选项（除了"),t("code",[a._v("-r")]),a._v("），bzip2 程序同样也支持。同样有 bunzip2 和 bzcat 程序来解压缩文件。bzip2 文件也带有 bzip2recover 程序，其会 试图恢复受损的 .bz2 文件。")]),a._v(" "),t("h2",{attrs:{id:"zip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zip"}},[a._v("#")]),a._v(" zip")]),a._v(" "),t("p",[t("code",[a._v("zip")]),a._v("程序既是压缩工具，也是一个打包工具，读取和写入.zip文件。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" options zipfile file"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])]),t("p",[a._v("它的用法如下。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将指定目录压缩成zip文件")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" playground.zip playground\n")])])]),t("p",[t("code",[a._v("zip")]),a._v("与"),t("code",[a._v("tar")]),a._v("命令有一个相反之处。如果压缩文件已存在，其将被更新而不是被替代。这意味着会保留此文件包，但是会添加新文件，同时替换匹配的文件。")]),a._v(" "),t("p",[a._v("解压使用"),t("code",[a._v("unzip")]),a._v("命令。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("unzip")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/playground.zip\n")])])]),t("p",[t("code",[a._v("unzip")]),a._v("命令的参数如下。")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("-l")]),a._v(" 列出文件包中的内容而不解压")]),a._v(" "),t("li",[t("code",[a._v("-v")]),a._v(" 显示冗余信息")]),a._v(" "),t("li",[t("code",[a._v("-p")]),a._v(" 输出发送到标准输出")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("unzip")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" ls-etc.zip "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("less")]),a._v("\n")])])]),t("h2",{attrs:{id:"tar"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar"}},[a._v("#")]),a._v(" tar")]),a._v(" "),t("p",[t("code",[a._v("tar")]),a._v("是tape archive的简称，原来是一款制作磁带备份的工具，现在主要用于打包。一个 tar 包可以由一组独立的文件，一个或者多个目录，或者两者混合体组成。")]),a._v(" "),t("p",[t("code",[a._v("tar")]),a._v("程序的语法如下。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" mode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("options"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" pathname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])]),t("p",[a._v("tar支持以下模式。")]),a._v(" "),t("ul",[t("li",[a._v("c 表示create，为文件和／或目录列表创建归档文件。")]),a._v(" "),t("li",[a._v("x 抽取归档文件。")]),a._v(" "),t("li",[a._v("r 追加具体的路径到归档文件的末尾。")]),a._v(" "),t("li",[a._v("t 列出归档文件的内容。")])]),a._v(" "),t("p",[a._v("支持的参数如下。")]),a._v(" "),t("ul",[t("li",[a._v("f 表示file，用来指定生成的文件。")])]),a._v(" "),t("p",[a._v("模式和参数可以写在一起，而且不需要开头的短横线。注意，必须首先指定模式，然后才是其它的选项。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建子目录的tar包")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" cf playground.tar playground\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看tar包内容")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" tf playground.tar\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看更详细的列表信息")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" tvf playground.tar\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 还原归档文件")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" xf playground.tar\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 还原单个文件")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" xf archive.tar pathname\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 还原文件到指定目录")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" xvf archive.tar "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" /home/me/\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 追加文件")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" rf archive.tar file.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 验证归档文件内容是否正确")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" tvfW archive.tar\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 支持通配符")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" xf "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/playground2.tar "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--wildcards")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'home/me/playground/\\*.txt'")]),a._v("\n")])])]),t("p",[a._v("注意，"),t("code",[a._v("tar")]),a._v("命令还原的时候，总是还原为相对路径。如果归档的时候，保存的是绝对路径，那么还原的时候，这个绝对路径会整个变成相对路径。")]),a._v(" "),t("p",[t("code",[a._v("find")]),a._v("命令可以与"),t("code",[a._v("tar")]),a._v("命令配合使用。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" playground "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'file.txt'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" rf playground.tar "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{}'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'+'")]),a._v("\n")])])]),t("p",[a._v("上面的命令先用"),t("code",[a._v("find")]),a._v("程序找到所有名为"),t("code",[a._v("file.txt")]),a._v("的文件，然后使用追加模式（"),t("code",[a._v("r")]),a._v("）的"),t("code",[a._v("tar")]),a._v("命令，把匹配的文件添加到归档文件"),t("code",[a._v("playground.tar")]),a._v("里面。")]),a._v(" "),t("p",[a._v("这种"),t("code",[a._v("tar")]),a._v("和"),t("code",[a._v("find")]),a._v("的配合使用，可以创建逐渐增加的目录树或者整个系统的备份。通过"),t("code",[a._v("find")]),a._v("命令匹配新于某个时间戳的文件，我们就能够创建一个归档文件，其只包含新于上一个 tar 包的文件。")]),a._v(" "),t("p",[a._v("tar支持压缩功能。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 打成gzip压缩包")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" czvf assets.tar.gz dist\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 打成bz2压缩包")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" cvfj assets.tar.bz2 dist\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 解压 tar.gz 文件")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" xzv archive.tar.gz\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" xvf archive.tar.gz\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 解压bz2压缩包")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" xvf archive.tar.bz2\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示gzip压缩包内容")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" tvf archive.tar.gz\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示bz2压缩包内容")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" tvf archive.tar.bz2\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从gzip压缩包取出单个文件")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" zxvf archive.tar.gz file.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从bz2压缩包取出单个文件")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" jxvf archive.tar.bz2 file.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 按通配符取出文件")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" zxvf archive.tar.gz "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--wildcards")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'*.php'")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" jxvf archive.tar.bz2 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--wildcards")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'*.php'")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 追加文件到压缩包")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" rvf archive.tar.gz xyz.txt\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" rvf archive.tar.bz2 xyz.txt\n")])])]),t("h2",{attrs:{id:"rsync"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rsync"}},[a._v("#")]),a._v(" rsync")]),a._v(" "),t("p",[t("code",[a._v("rsync")]),a._v("命令用于在多个目录之间、或者本地与远程目录之间同步。字母"),t("code",[a._v("r")]),a._v("表示"),t("code",[a._v("remote")]),a._v("。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rsync")]),a._v(" options "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("source")]),a._v(" destination\n")])])]),t("p",[a._v("source 和 destination 是下列选项之一：")]),a._v(" "),t("ul",[t("li",[a._v("一个本地文件或目录")]),a._v(" "),t("li",[a._v("一个远端文件或目录，以"),t("code",[a._v("[user@]host:path")]),a._v("的形式存在")]),a._v(" "),t("li",[a._v("一个远端 rsync 服务器，由"),t("code",[a._v("rsync://[user@]host[:port]/path")]),a._v("指定")])]),a._v(" "),t("p",[a._v("注意 source 和 destination 两者之一必须是本地文件。rsync 不支持远端到远端的复制。")]),a._v(" "),t("p",[t("code",[a._v("rsync")]),a._v("命令的参数如下。")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("-a")]),a._v(" 递归和保护文件属性")]),a._v(" "),t("li",[t("code",[a._v("-v")]),a._v(" 冗余输出")]),a._v(" "),t("li",[t("code",[a._v("--delete")]),a._v(" 删除可能在备份设备中已经存在但却不再存在于源设备中的文件")]),a._v(" "),t("li",[t("code",[a._v("--rsh=ssh")]),a._v(" 使用 ssh 程序作为远程 shell，目的地必须标注主机名。")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 同步两个本地目录")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rsync")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-av")]),a._v(" playground foo\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除源设备不存在的文件")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rsync")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-av")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--delete")]),a._v(" /etc /home /usr/local /media/BigDisk/backup\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 远程同步")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rsync")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-av")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--delete")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--rsh")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("ssh /etc /home /usr/local remote-sys:/backup\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 与远程rsync主机同步")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rsync")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-av")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-delete")]),a._v(" rsync://rsync.gtlib.gatech.edu/path/to/oss fedora-devel\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);