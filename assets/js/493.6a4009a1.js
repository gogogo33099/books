(window.webpackJsonp=window.webpackJsonp||[]).push([[493],{937:function(s,n,e){"use strict";e.r(n);var t=e(14),r=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"分层设计"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分层设计"}},[s._v("#")]),s._v(" 分层设计")]),s._v(" "),n("h2",{attrs:{id:"后端代码目录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#后端代码目录"}},[s._v("#")]),s._v(" 后端代码目录")]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("└── server\n    ├── controllers "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 操作层 执行服务端模板渲染，json接口返回数据，页面跳转")]),s._v("\n    │   ├── admin.js\n    │   ├── index.js\n    │   ├── user-info.js\n    │   └── work.js\n    ├── models "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数据模型层 执行数据操作")]),s._v("\n    │   └── user-Info.js\n    ├── routers "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 路由层 控制路由")]),s._v("\n    │   ├── admin.js\n    │   ├── api.js\n    │   ├── error.js\n    │   ├── home.js\n    │   ├── index.js\n    │   └── work.js\n    ├── services "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 业务层 实现数据层model到操作层controller的耦合封装")]),s._v("\n    │   └── user-info.js\n    └── views "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 服务端模板代码")]),s._v("\n        ├── admin.ejs\n        ├── error.ejs\n        ├── index.ejs\n        └── work.ejs\n")])])])])}),[],!1,null,null,null);n.default=r.exports}}]);