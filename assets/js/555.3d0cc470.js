(window.webpackJsonp=window.webpackJsonp||[]).push([[555],{1022:function(t,v,_){"use strict";_.r(v);var s=_(14),o=Object(s.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"_4-6-字符串"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-字符串"}},[t._v("#")]),t._v(" 4.6 字符串")]),t._v(" "),v("p",[t._v("字符串是 UTF-8 字符的一个序列（当字符为 ASCII 码时则占用 1 个字节，其它字符根据需要占用 2-4 个字节）。UTF-8 是被广泛使用的编码格式，是文本文件的标准编码，其它包括 XML 和 JSON 在内，也都使用该编码。由于该编码对占用字节长度的不定性，Go 中的字符串里面的字符也可能根据需要占用 1 至 4 个字节（示例见"),v("RouterLink",{attrs:{to:"/the-way-to-go/04.6.html"}},[t._v("第 4.6 节")]),t._v("），这与其它语言如 C++、Java 或者 Python 不同（Java 始终使用 2 个字节）。Go 这样做的好处是不仅减少了内存和硬盘空间占用，同时也不用像其它语言那样需要对使用 UTF-8 字符集的文本进行编码和解码。")],1),t._v(" "),v("p",[t._v("字符串是一种值类型，且值不可变，即创建某个文本后你无法再次修改这个文本的内容；更深入地讲，字符串是字节的定长数组。")]),t._v(" "),v("p",[t._v("Go 支持以下 2 种形式的字面值：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("解释字符串：")]),t._v(" "),v("p",[t._v("该类字符串使用双引号括起来，其中的相关的转义字符将被替换，这些转义字符包括：")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("\\n")]),t._v("：换行符")]),t._v(" "),v("li",[v("code",[t._v("\\r")]),t._v("：回车符")]),t._v(" "),v("li",[v("code",[t._v("\\t")]),t._v("：tab 键")]),t._v(" "),v("li",[v("code",[t._v("\\u")]),t._v(" 或 "),v("code",[t._v("\\U")]),t._v("：Unicode 字符")]),t._v(" "),v("li",[v("code",[t._v("\\\\")]),t._v("：反斜杠自身")])])]),t._v(" "),v("li",[v("p",[t._v("非解释字符串：")]),t._v(" "),v("p",[t._v("该类字符串使用反引号括起来，支持换行，例如：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v("  `This is a raw string \\n` 中的 `\\n\\` 会被原样输出。\n")])])])])]),t._v(" "),v("p",[t._v("和 C/C++不一样，Go 中的字符串是根据长度限定，而非特殊字符 "),v("code",[t._v("\\0")]),t._v("。")]),t._v(" "),v("p",[v("code",[t._v("string")]),t._v(" 类型的零值为长度为零的字符串，即空字符串 "),v("code",[t._v('""')]),t._v("。")]),t._v(" "),v("p",[t._v("一般的比较运算符（"),v("code",[t._v("==")]),t._v("、"),v("code",[t._v("!=")]),t._v("、"),v("code",[t._v("<")]),t._v("、"),v("code",[t._v("<=")]),t._v("、"),v("code",[t._v(">=")]),t._v("、"),v("code",[t._v(">")]),t._v("）通过在内存中按字节比较来实现字符串的对比。你可以通过函数 "),v("code",[t._v("len()")]),t._v(" 来获取字符串所占的字节长度，例如："),v("code",[t._v("len(str)")]),t._v("。")]),t._v(" "),v("p",[t._v("字符串的内容（纯字节）可以通过标准索引法来获取，在中括号 "),v("code",[t._v("[]")]),t._v(" 内写入索引，索引从 0 开始计数：")]),t._v(" "),v("ul",[v("li",[t._v("字符串 "),v("code",[t._v("str")]),t._v(" 的第 1 个字节："),v("code",[t._v("str[0]")])]),t._v(" "),v("li",[t._v("第 "),v("code",[t._v("i")]),t._v(" 个字节："),v("code",[t._v("str[i - 1]")])]),t._v(" "),v("li",[t._v("最后 1 个字节："),v("code",[t._v("str[len(str)-1]")])])]),t._v(" "),v("p",[t._v("需要注意的是，这种转换方案只对纯 ASCII 码的字符串有效。")]),t._v(" "),v("p",[v("strong",[t._v("注意事项")]),t._v(" 获取字符串中某个字节的地址的行为是非法的，例如："),v("code",[t._v("&str[i]")]),t._v("。")]),t._v(" "),v("p",[v("strong",[t._v("字符串拼接符 "),v("code",[t._v("+")])])]),t._v(" "),v("p",[t._v("两个字符串 "),v("code",[t._v("s1")]),t._v(" 和 "),v("code",[t._v("s2")]),t._v(" 可以通过 "),v("code",[t._v("s := s1 + s2")]),t._v(" 拼接在一起。")]),t._v(" "),v("p",[v("code",[t._v("s2")]),t._v(" 追加在 "),v("code",[t._v("s1")]),t._v(" 尾部并生成一个新的字符串 "),v("code",[t._v("s")]),t._v("。")]),t._v(" "),v("p",[t._v("你可以通过以下方式来对代码中多行的字符串进行拼接：")]),t._v(" "),v("div",{staticClass:"language-go extra-class"},[v("pre",{pre:!0,attrs:{class:"language-go"}},[v("code",[t._v("str "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Beginning of the string "')]),t._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n\t"),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"second part of the string"')]),t._v("\n")])])]),v("p",[t._v("由于编译器行尾自动补全分号的缘故，加号 "),v("code",[t._v("+")]),t._v(" 必须放在第一行。")]),t._v(" "),v("p",[t._v("拼接的简写形式 "),v("code",[t._v("+=")]),t._v(" 也可以用于字符串：")]),t._v(" "),v("div",{staticClass:"language-go extra-class"},[v("pre",{pre:!0,attrs:{class:"language-go"}},[v("code",[t._v("s "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hel"')]),t._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lo,"')]),t._v("\ns "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world!"')]),t._v("\nfmt"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出 “hello, world!”")]),t._v("\n")])])]),v("p",[t._v("在循环中使用加号 "),v("code",[t._v("+")]),t._v(" 拼接字符串并不是最高效的做法，更好的办法是使用函数 "),v("code",[t._v("strings.Join()")]),t._v("（"),v("RouterLink",{attrs:{to:"/the-way-to-go/04.7.html"}},[t._v("第 4.7.10 节")]),t._v("），有没有更好的办法了？有！使用字节缓冲（"),v("code",[t._v("bytes.Buffer")]),t._v("）拼接更加给力（"),v("RouterLink",{attrs:{to:"/the-way-to-go/07.2.html"}},[t._v("第 7.2.6 节")]),t._v("）！")],1),t._v(" "),v("p",[t._v("在"),v("RouterLink",{attrs:{to:"/the-way-to-go/07.0.html"}},[t._v("第 7 章")]),t._v("，我们会讲到通过将字符串看作是字节 ("),v("code",[t._v("byte")]),t._v(") 的切片 (slice) 来实现对其标准索引法的操作。会在"),v("RouterLink",{attrs:{to:"/the-way-to-go/05.4.html"}},[t._v("第 5.4.1 节")]),t._v(" 中讲到的 "),v("code",[t._v("for")]),t._v(" 循环只会根据索引返回字符串中的纯字节，而在"),v("RouterLink",{attrs:{to:"/the-way-to-go/05.4.html"}},[t._v("第 5.4.4 节")]),t._v("（以及"),v("RouterLink",{attrs:{to:"/the-way-to-go/07.6.html"}},[t._v("第 7.6.1 节")]),t._v(" 的示例）将会展示如何使用 for-range 循环来实现对 Unicode 字符串的迭代操作。在下一节，我们会学习到许多有关字符串操作的函数和方法，同时 "),v("code",[t._v("fmt")]),t._v(" 包中的 "),v("code",[t._v("fmt.Sprint(x)")]),t._v(" 也可以格式化生成并返回你所需要的字符串（"),v("RouterLink",{attrs:{to:"/the-way-to-go/04.3.html"}},[t._v("第 4.4.3 节")]),t._v("）。")],1),t._v(" "),v("p",[v("strong",[t._v("练习 4.6")]),t._v(" "),v("a",{attrs:{href:"exercises/chapter_4/count_characters.go"}},[t._v("count_characters.go")])]),t._v(" "),v("p",[t._v("创建一个用于统计字节和字符 (rune) 的程序，并对字符串 "),v("code",[t._v("asSASA ddd dsjkdsjs dk")]),t._v(" 进行分析，然后再分析 "),v("code",[t._v("asSASA ddd dsjkdsjsこん dk")]),t._v("，最后解释两者不同的原因（提示：使用 "),v("code",[t._v("unicode/utf8")]),t._v(" 包）。")]),t._v(" "),v("h2",{attrs:{id:"链接"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#链接"}},[t._v("#")]),t._v(" 链接")]),t._v(" "),v("ul",[v("li",[v("RouterLink",{attrs:{to:"/the-way-to-go/directory.html"}},[t._v("目录")])],1),t._v(" "),v("li",[t._v("上一节："),v("RouterLink",{attrs:{to:"/the-way-to-go/04.5.html"}},[t._v("基本类型和运算符")])],1),t._v(" "),v("li",[t._v("下一节："),v("RouterLink",{attrs:{to:"/the-way-to-go/04.7.html"}},[t._v("strings 和 strconv 包")])],1)])])}),[],!1,null,null,null);v.default=o.exports}}]);